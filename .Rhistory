#first get the pmtdate interval
pmtdate.interval = months.in.year/frequency
#Compute the payment dates
pmtdate = as.Date(c(if(settlement.date == issue.date)
{seq(start.date, end.date, by = paste(pmtdate.interval, "months"))}
else
{seq(nextpmt.date, end.date, by = paste(pmtdate.interval, "months"))}), "%m-%d-%Y") + delay
#Build the time period vector (n) for discounting the cashflows nextpmt date
#is vector of payment dates to n for each period
time.period = BondBasisConversion(issue.date = issue.date,
start.date = start.date,
end.date = end.date,
settlement.date = settlement.date,
lastpmt.date = lastpmt.date,
nextpmt.date = pmtdate)
#step4 Count the number of cashflows
#num.periods is the total number of cashflows to be received
#num.period is the period in which the cashflow is received
num.periods = length(time.period)
num.period = seq(1:num.periods)
#Calibrate the CIR Model
Market.Fit <- CalibrateCIR(trade.date = trade.date, sigma = sigma)
kappa  = Market.Fit$p1
lambda = Market.Fit$p2
theta  = Market.Fit$p3
#Call CIR Model
#The CIR Model will pass the rates data to both the prepayment model
#and the home price simulation model
set.seed(300)
InterestRateSimulation <- CIRSim(shortrate = 0.025,
kappa = .13,
theta = .02,
T = 30,
step = (1/12),
sigma = .015,
N = 1000)
#Create the matrix of simulated Home Prices
HomePriceSimulation <- NULL
for(i in 1:ncol(InterestRateSimulation)){
HomePrice = HPISim(shortrate = InterestRateSimulation[2,i],
LongTermGrowth = .025,
sigma = 0.015,
T = 30,
step = 1/12,
N = 1)
HomePriceSimulation = cbind(HomePriceSimulation, HomePrice)}
#================ Loop through the home price simulations ===============
DefaultVector = num.period
LossAmount = num.period
CumLoss = num.period
AvgLife = NULL
for(j in 1:ncol(InterestRateSimulation)) {
cum.rate = cumprod(1 + InterestRateSimulation[2:361,j])
spot.rate = (((cum.rate^(1/num.period)) ^ (1/months.in.year))-1)
TermStructure <- new("TermStructure",
tradedate = "01-10-2013",
period = num.period,
date = as.character(pmtdate),
spotrate = spot.rate,
forwardrate = InterestRateSimulation[2:361,j],
TwoYearFwd = CIRBondPrice(shortrate = as.numeric(InterestRateSimulation[2:361, j]),
kappa = kappa,
lambda = lambda,
theta =  theta,
sigma = sigma,
T = 2, step = 0,
result = "y") * 100,
TenYearFwd = CIRBondPrice(shortrate = as.numeric(InterestRateSimulation[2:361, j]),
kappa = kappa,
lambda = lambda,
theta = theta,
sigma = sigma,
T = 10, step = 0,
result = "y") * 100)
ProjectedDefault <- PrepaymentAssumption(bond.id = bond.id,
TermStructure = TermStructure,
MortgageRate = MortgageRate,
PrepaymentAssumption = "CPR",
ModelTune = ModelTune,
Burnout = Burnout,
CPR = 0,
HomePrice = HomePriceSimulation[2:361,j])
MortgageCashFlow <- MortgageCashFlow(bond.id = bond.id,
original.bal = 1000000,
settlement.date = settlement.date,
price = 100,
PrepaymentAssumption = ProjectedDefault)
DefaultVector = cbind(DefaultVector, ProjectedDefault@MDR)
LossAmount = cbind(LossAmount, MortgageCashFlow@DefaultedPrin)
CumLoss <- cbind(CumLoss, cumsum(MortgageCashFlow@DefaultedPrin))
AvgLife <- append(AvgLife, MortgageCashFlow@WAL)
}
# ================ Figure 23.3 =======================
Default <- data.frame(DefaultVector)
Default <- melt(Default, id = "DefaultVector")
colnames(Default) <- c("Period", "Variable", "Value" )
ggplot(Default, aes(x=Period, y = (1-(1-Value)^12) * 100, group = Variable)) +
geom_line(size = .05, alpha = .8) +
theme_minimal() +
ylab("Annualized Monthly Default Rate")+
xlab("Time") +
scale_y_continuous(limits = c(0,30), breaks = seq(0, 30, 5)) +
scale_x_continuous(limits = c(0, 360), breaks = seq(0, 360, 36)) +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
# ============== Figure 23.4 ==========================
CumLossPct <- data.frame(CumLoss[,2:1001]/1000000)
CumLossPct<- cbind(num.period, CumLossPct)
CumLossPct <- melt(CumLossPct, id = "num.period")
colnames(CumLossPct) <- c("Period", "Variable", "Value" )
ggplot(CumLossPct, aes(x=Period, y = Value * 100, group = Variable)) +
geom_line(size = .05, alpha = .8) +
theme_minimal() +
ylab("Cumulative Principal Default")+
xlab("Loan Age") +
scale_y_continuous(limits = c(0,60), breaks = seq(0, 60, 5)) +
scale_x_continuous(limits = c(0, 360), breaks = seq(0, 360, 36)) +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
# =============== Figure 23.5 ===========================
mean(as.numeric(subset(CumLoss[,2:1001]/1000000, CumLoss$CumLoss == 360)))
CumLoss <- data.frame(CumLoss)
ggplot(subset(CumLossPct, CumLossPct$Period == 360), aes(x= Value * .35 * 100)) +
geom_histogram(aes(y=..density..),
binwidth = .05,
colour = "gray87",
fill = "grey") +
geom_density(alpha = .2, fill = "gray8") +
theme_minimal() +
ylab("Density of Loss Function")+
xlab("Cumulative Loss") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
# ============== Figure 23.6 ========================
CumDensityData <- melt(subset(CumLoss[,2:1001]/1000000, CumLoss$CumLoss == 360) * .35)
ggplot(CumDensityData, aes(value * 100)) +
stat_ecdf() +
geom_segment(aes(x = 0, y = .7, xend = 8, yend = .7), linetype = "longdash") +
geom_segment(aes(x = 8, y = 0, xend = 8, yend = .7), linetype = "longdash") +
geom_segment(aes(x = 0, y = .95, xend = 12.5, yend = .95), linetype = "dotdash") +
geom_segment(aes(x = 12.5, y = 0, xend = 12.5, yend = .95), linetype = "dotdash") +
theme_minimal() +
annotate("text", x = 4.5, y = .97, label = "95% Confidence") +
annotate("text", x = 4.5, y = .93, label = "12% Subordination") +
annotate("text", x = 4.5, y = .72, label = "70% Confidence") +
annotate("text", x = 4.5, y = .68, label = "8% Subordination") +
ylab("Cumulative Density of Loss Function")+
xlab("Cumulative Loss pct (%)") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(Default, aes(x=Period, y = (1-(1-Value)^12) * 100, group = Variable)) +
geom_line(size = .05, alpha = .8) +
theme_minimal() +
ylab("Annualized Monthly Default Rate")+
xlab("Time") +
scale_y_continuous(limits = c(0,15), breaks = seq(0, 15, 5)) +
scale_x_continuous(limits = c(0, 360), breaks = seq(0, 360, 36)) +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(CumLossPct, aes(x=Period, y = Value * 100, group = Variable)) +
geom_line(size = .05, alpha = .8) +
theme_minimal() +
ylab("Cumulative Principal Default")+
xlab("Loan Age") +
scale_y_continuous(limits = c(0,60), breaks = seq(0, 60, 5)) +
scale_x_continuous(limits = c(0, 360), breaks = seq(0, 360, 36)) +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(CumLossPct, aes(x=Period, y = Value * 100, group = Variable)) +
geom_line(size = .05, alpha = .8) +
theme_minimal() +
ylab("Cumulative Principal Default")+
xlab("Loan Age") +
scale_y_continuous(limits = c(0,40), breaks = seq(0, 40, 5)) +
scale_x_continuous(limits = c(0, 360), breaks = seq(0, 360, 36)) +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
geom_density(alpha = .2, fill = "gray8") +
theme_minimal() +
ylab("Density of Loss Function")+
xlab("Cumulative Loss") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
CumLoss <- data.frame(CumLoss)
ggplot(subset(CumLossPct, CumLossPct$Period == 360), aes(x= Value * .35 * 100)) +
geom_histogram(aes(y=..density..),
binwidth = .05,
colour = "gray87",
fill = "grey") +
geom_density(alpha = .2, fill = "gray8") +
theme_minimal() +
ylab("Density of Loss Function")+
xlab("Cumulative Loss") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(CumDensityData, aes(value * 100)) +
stat_ecdf() +
geom_segment(aes(x = 0, y = .7, xend = 8, yend = .7), linetype = "longdash") +
geom_segment(aes(x = 8, y = 0, xend = 8, yend = .7), linetype = "longdash") +
geom_segment(aes(x = 0, y = .95, xend = 12.5, yend = .95), linetype = "dotdash") +
geom_segment(aes(x = 12.5, y = 0, xend = 12.5, yend = .95), linetype = "dotdash") +
theme_minimal() +
annotate("text", x = 4.5, y = .97, label = "95% Confidence") +
annotate("text", x = 4.5, y = .93, label = "12% Subordination") +
annotate("text", x = 4.5, y = .72, label = "70% Confidence") +
annotate("text", x = 4.5, y = .68, label = "8% Subordination") +
ylab("Cumulative Density of Loss Function")+
xlab("Cumulative Loss pct (%)") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(CumDensityData, aes(value * 100)) +
stat_ecdf() +
geom_segment(aes(x = 0, y = .95, xend = 8.5, yend = .7), linetype = "longdash") +
geom_segment(aes(x = 8, y = 0, xend = 8.5, yend = .7), linetype = "longdash") +
#geom_segment(aes(x = 0, y = .95, xend = 12.5, yend = .95), linetype = "dotdash") +
#geom_segment(aes(x = 12.5, y = 0, xend = 12.5, yend = .95), linetype = "dotdash") +
theme_minimal() +
annotate("text", x = 4.5, y = .97, label = "95% Confidence") +
annotate("text", x = 4.5, y = .93, label = "12% Subordination") +
#annotate("text", x = 4.5, y = .72, label = "70% Confidence") +
#annotate("text", x = 4.5, y = .68, label = "8% Subordination") +
ylab("Cumulative Density of Loss Function")+
xlab("Cumulative Loss pct (%)") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(CumDensityData, aes(value * 100)) +
stat_ecdf() +
geom_segment(aes(x = 0, y = .95, xend = 8.5, yend = .7), linetype = "longdash") +
geom_segment(aes(x = 8, y = 0, xend = 8.5, yend = .95), linetype = "longdash") +
#geom_segment(aes(x = 0, y = .95, xend = 12.5, yend = .95), linetype = "dotdash") +
#geom_segment(aes(x = 12.5, y = 0, xend = 12.5, yend = .95), linetype = "dotdash") +
theme_minimal() +
annotate("text", x = 4.5, y = .97, label = "95% Confidence") +
annotate("text", x = 4.5, y = .93, label = "12% Subordination") +
#annotate("text", x = 4.5, y = .72, label = "70% Confidence") +
#annotate("text", x = 4.5, y = .68, label = "8% Subordination") +
ylab("Cumulative Density of Loss Function")+
xlab("Cumulative Loss pct (%)") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(CumDensityData, aes(value * 100)) +
stat_ecdf() +
geom_segment(aes(x = 0, y = .95, xend = 8.5, yend = .7), linetype = "longdash") +
geom_segment(aes(x = 8, y = 0, xend = 8.5, yend = .99), linetype = "longdash") +
#geom_segment(aes(x = 0, y = .95, xend = 12.5, yend = .95), linetype = "dotdash") +
#geom_segment(aes(x = 12.5, y = 0, xend = 12.5, yend = .95), linetype = "dotdash") +
theme_minimal() +
annotate("text", x = 4.5, y = .97, label = "95% Confidence") +
annotate("text", x = 4.5, y = .93, label = "12% Subordination") +
#annotate("text", x = 4.5, y = .72, label = "70% Confidence") +
#annotate("text", x = 4.5, y = .68, label = "8% Subordination") +
ylab("Cumulative Density of Loss Function")+
xlab("Cumulative Loss pct (%)") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(CumDensityData, aes(value * 100)) +
stat_ecdf() +
geom_segment(aes(x = 0, y = .95, xend = 8.5, yend = .7), linetype = "longdash") +
geom_segment(aes(x = 8.5, y = 0, xend = 8.5, yend = .99), linetype = "longdash") +
#geom_segment(aes(x = 0, y = .95, xend = 12.5, yend = .95), linetype = "dotdash") +
#geom_segment(aes(x = 12.5, y = 0, xend = 12.5, yend = .95), linetype = "dotdash") +
theme_minimal() +
annotate("text", x = 4.5, y = .97, label = "95% Confidence") +
annotate("text", x = 4.5, y = .93, label = "12% Subordination") +
#annotate("text", x = 4.5, y = .72, label = "70% Confidence") +
#annotate("text", x = 4.5, y = .68, label = "8% Subordination") +
ylab("Cumulative Density of Loss Function")+
xlab("Cumulative Loss pct (%)") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(CumDensityData, aes(value * 100)) +
stat_ecdf() +
geom_segment(aes(x = 0, y = .99, xend = 8.5, yend = .7), linetype = "longdash") +
geom_segment(aes(x = 8.5, y = 0, xend = 8.5, yend = .99), linetype = "longdash") +
#geom_segment(aes(x = 0, y = .95, xend = 12.5, yend = .95), linetype = "dotdash") +
#geom_segment(aes(x = 12.5, y = 0, xend = 12.5, yend = .95), linetype = "dotdash") +
theme_minimal() +
annotate("text", x = 4.5, y = .97, label = "95% Confidence") +
annotate("text", x = 4.5, y = .93, label = "12% Subordination") +
#annotate("text", x = 4.5, y = .72, label = "70% Confidence") +
#annotate("text", x = 4.5, y = .68, label = "8% Subordination") +
ylab("Cumulative Density of Loss Function")+
xlab("Cumulative Loss pct (%)") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(CumDensityData, aes(value * 100)) +
stat_ecdf() +
geom_segment(aes(x = 0, y = .99, xend = 8.5, yend = .99), linetype = "longdash") +
geom_segment(aes(x = 8.5, y = 0, xend = 8.5, yend = .99), linetype = "longdash") +
#geom_segment(aes(x = 0, y = .95, xend = 12.5, yend = .95), linetype = "dotdash") +
#geom_segment(aes(x = 12.5, y = 0, xend = 12.5, yend = .95), linetype = "dotdash") +
theme_minimal() +
annotate("text", x = 4.5, y = .97, label = "95% Confidence") +
annotate("text", x = 4.5, y = .93, label = "12% Subordination") +
#annotate("text", x = 4.5, y = .72, label = "70% Confidence") +
#annotate("text", x = 4.5, y = .68, label = "8% Subordination") +
ylab("Cumulative Density of Loss Function")+
xlab("Cumulative Loss pct (%)") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(CumDensityData, aes(value * 100)) +
stat_ecdf() +
geom_segment(aes(x = 0, y = .99, xend = 8.5, yend = .99), linetype = "longdash") +
geom_segment(aes(x = 8.5, y = 0, xend = 8.5, yend = .99), linetype = "longdash") +
#geom_segment(aes(x = 0, y = .95, xend = 12.5, yend = .95), linetype = "dotdash") +
#geom_segment(aes(x = 12.5, y = 0, xend = 12.5, yend = .95), linetype = "dotdash") +
theme_minimal() +
annotate("text", x = 4.0, y = .97, label = "99% Confidence") +
annotate("text", x = 4.0, y = .93, label = "8.5% Subordination") +
#annotate("text", x = 4.5, y = .72, label = "70% Confidence") +
#annotate("text", x = 4.5, y = .68, label = "8% Subordination") +
ylab("Cumulative Density of Loss Function")+
xlab("Cumulative Loss pct (%)") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(CumDensityData, aes(value * 100)) +
stat_ecdf() +
geom_segment(aes(x = 0, y = .99, xend = 8.5, yend = .99), linetype = "longdash") +
geom_segment(aes(x = 8.5, y = 0, xend = 8.5, yend = .99), linetype = "longdash") +
#geom_segment(aes(x = 0, y = .95, xend = 12.5, yend = .95), linetype = "dotdash") +
#geom_segment(aes(x = 12.5, y = 0, xend = 12.5, yend = .95), linetype = "dotdash") +
theme_minimal() +
annotate("text", x = 3.5, y = .97, label = "99% Confidence") +
annotate("text", x = 3.5, y = .93, label = "8.5% Subordination") +
#annotate("text", x = 4.5, y = .72, label = "70% Confidence") +
#annotate("text", x = 4.5, y = .68, label = "8% Subordination") +
ylab("Cumulative Density of Loss Function")+
xlab("Cumulative Loss pct (%)") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
ggplot(CumDensityData, aes(value * 100)) +
stat_ecdf() +
geom_segment(aes(x = 0, y = .99, xend = 8.5, yend = .99), linetype = "longdash") +
geom_segment(aes(x = 8.5, y = 0, xend = 8.5, yend = .99), linetype = "longdash") +
#geom_segment(aes(x = 0, y = .95, xend = 12.5, yend = .95), linetype = "dotdash") +
#geom_segment(aes(x = 12.5, y = 0, xend = 12.5, yend = .95), linetype = "dotdash") +
theme_minimal() +
annotate("text", x = 3.0, y = .97, label = "99% Confidence") +
annotate("text", x = 3.0, y = .93, label = "8.5% Subordination") +
#annotate("text", x = 4.5, y = .72, label = "70% Confidence") +
#annotate("text", x = 4.5, y = .68, label = "8% Subordination") +
ylab("Cumulative Density of Loss Function")+
xlab("Cumulative Loss pct (%)") +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
mean(as.numeric(subset(CumLoss[,2:1001]/1000000, CumLoss$CumLoss == 360)))
9.9 * .35
8.5/3.46
35 * .35
8.5/12.2
8.5/17.9
set.seed(300)
simulation <- HPISim(shortrate = 0.025, LongTermGrowth = .025, sigma = .025, T = 30, step = 1/12, N = 1000)
sim <- melt(simulation)
colnames(sim) <- c("Period", "Variable", "Value" )
ggplot(sim, aes(x = Period, y = Value * 100, colour = Variable)) +
geom_line(size = .08, alpha = .4) +
theme_minimal() +
ylab("Home Price Index")+
xlab("Time") +
scale_x_continuous(limits = c(0, 360), breaks = seq(0, 360, 36)) +
theme(panel.grid.major = element_line(size = .50, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20)) +
theme(legend.position = "none")
library(BondLab)
library(RCurl)
url <- "https://mbsdisclosure.fanniemae.com/disclosure-docs/monthly/mbs022015.zip"
url <- "https://mbsdisclosure.fanniemae.com/"
userpwd <- "glennmschultz@me.com:Kodiak18j#"
filenames <- getURL(url,
#userpwd = userpwd,
#ftp.use.epsv = FALSE,
#dirlistonly = TRUE,
#postfields = c()
)
url <- "https://mbsdisclosure.fanniemae.com/"
userpwd <- "glennmschultz@me.com:Kodiak18j#"
filenames <- getURL(url
#userpwd = userpwd,
#ftp.use.epsv = FALSE,
#dirlistonly = TRUE,
#postfields = c()
)
url <- "https://mbsdisclosure.fanniemae.com/"
userpwd <- "glennmschultz@me.com:Kodiak18j#"
filenames <- getURL(url
#userpwd = userpwd,
#ftp.use.epsv = FALSE,
#dirlistonly = TRUE,
#postfields = c()
)
url <- "https://mbsdisclosure.fanniemae.com/disclosure-docs/monthly/mbs022015.zip"
filenames <- getURL(url
#userpwd = userpwd,
#ftp.use.epsv = FALSE,
#dirlistonly = TRUE,
#postfields = c()
)
url <- "https://mbsdisclosure.fanniemae.com/disclosure-docs/monthly/mbs022015.zip"
userpwd <- "glennmschultz@me.com:Kodiak18j#"
filenames <- getURL(url
userpwd = userpwd,
ftp.use.epsv = FALSE,
dirlistonly = TRUE,
#postfields = c()
)
url <- "https://mbsdisclosure.fanniemae.com/disclosure-docs/monthly/mbs022015.zip"
userpwd <- "glennmschultz@me.com:Kodiak18j#"
filenames <- getURL(url
userpwd = userpwd,
ftp.use.epsv = FALSE,
dirlistonly = TRUE
#postfields = c()
)
url <- "https://mbsdisclosure.fanniemae.com/disclosure-docs/monthly/mbs022015.zip"
userpwd <- "glennmschultz@me.com:Kodiak18j#"
filenames <- getURL(url
userpwd = userpwd,
ftp.use.epsv = FALSE,
dirlistonly = TRUE
)
url <- "https://mbsdisclosure.fanniemae.com/disclosure-docs/monthly/mbs022015.zip"
userpwd <- "glennmschultz@me.com:Kodiak18j#"
filenames <- getURL(url,
userpwd = userpwd,
ftp.use.epsv = FALSE,
dirlistonly = TRUE
)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
install.packages("devtools")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
devtools::use_vignette("Bond Lab")
install.packages("rmarkdown")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
devtools::use_vignette("Bond Lab")
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(BondLab)
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(BondLab)
MortgageCashFlows
MortgageCashFlow
MBSDetail
MBSDetails
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
MBSDetails
MortgageCashFlow
Mortgage.Monthly.Payment
MBSDetails
EstimYTM
MortgageTermStructure
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
YTMtoPrice
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(BondLab)
library(BondLab)
library(BondLab)
