stringsAsFactors = FALSE)
colnames(ClosedLoans) <- gsub("\\.", " ", colnames(ClosedLoans))
colnames(ClosedLoans) <- gsub("\\_", " ", colnames(ClosedLoans))
DateCentury(ClosedLoans[,"INITIAL ENDORSEMENT DATE"])
DateCentury(ClosedLoans[9996,"INITIAL ENDORSEMENT DATE"])
DateCentury(ClosedLoans[1:48679,"INITIAL ENDORSEMENT DATE"])
ClosedLoans[9964,"INITIAL ENDORSEMENT DATE"]
DateCentury(ClosedLoans[9964,"INITIAL ENDORSEMENT DATE"])
DateCentury(ClosedLoans[,"INITIAL ENDORSEMENT DATE"])
test <- DateCentury(ClosedLoans[,"INITIAL ENDORSEMENT DATE"])
test
for(i in 1:LoanCount){
DateCentury(ClosedLoans[i, "INITIAL ENDORSEMENT DATE"])}
test <- for(i in 1:LoanCount){
DateCentury(ClosedLoans[i, "INITIAL ENDORSEMENT DATE"])}
test[9964]
test
length(test)
for(i in 1:LoanCount){
vector <- NULL
vector[i] <- DateCentury(ClosedLoans[i, "INITIAL ENDORSEMENT DATE"])}
vector[9964]
DateCentury(ClosedLoans[9964, "INITIAL ENDORSEMENT DATE"])
for(i in 1:LoanCount){
print(DateCentury(ClosedLoans[, "INITIAL ENDORSEMENT DATE"]))}
warnings()
DateCentury("2001/01/01")
DateCentury("01/01/2001")
DateCentury("01/01/1999")
DateCentury("01/01/99")
DateCentury("01/01/01")
DateCentury("01/01/55")
DateCentury("01/1/55")
DateCentury("1/1/55")
DateCentury("10/10/55")
DateCentury("10/1/55")
DateCentury("1/10/55")
DateCentury(ClosedLoans[,"TERM DATE"])
DateCentury(ClosedLoans[1,"TERM DATE"])
DateCentury(ClosedLoans[2,"TERM DATE"])
DateCentury(ClosedLoans[7,"TERM DATE"])
sapply(ClosedLoans[1:48679, "TERM DATE"])
sapply(ClosedLoans[1:48679, "TERM DATE"], DateCentury())
sapply(ClosedLoans[1:48679, "TERM DATE"], DateCentury)
Data <- ClosedLoan[1:100,]
Data <- ClosedLoans[1:100,]
View(Data)
dput(Data)
as.Date("01/01/1969")
as.Date("01/01/69")
as.Date("01/01/69", format = "%m/%d/%y")
as.Date("01/01/68", format = "%m/%d/%y")
as.Date("12/31/68", format = "%m/%d/%y")
as.Date("12/29/68", format = "%m/%d/%y")
install.packages("rjson")
library("rjson", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
paste(system.file(package = "BondLab"),
"/BondData/", Bond.id, ".rds", sep = ""), open = "rb")
paste(system.file(package = "BondLab"),
"/BondData/", Bond.id, ".rds", sep = "")
library(BondLab)
200 * 20
5000 * 64
(5000 * 64)/100
(5000 * 64)/100/100
library(BondLab)
require(BondLab)
BondLabSetUp()
require(KDSBLX)
GetSwapCurve(CurveDate = "07-28-2016",
APIKey = "31df8645e635484db99e5d1133ce9245")
MakeMBSDetails(
Cusip = "3138YY6Q1",
ID = "3138YY6Q1FNAZ7178",
BondType = "MBS",
Sector = "MBS",
Coupon = 4.00,
IssueDate = "08-01-2015",
DatedDate = "08-01-2015",
Maturity = "06-01-2045",
LastPmtDate = "07-01-2016",
NextPmtDate = "09-01-2016",
Term = 359,
WAM = 348,
WALA = 11,
>>>>>>> .merge_file_tSAnNq
PaymentDelay = 24,
Moody = "Aaa",
SP = "AAA",
BondLab = "Aaa",
Frequency = 12,
BondBasis = "30360",
<<<<<<< .merge_file_8yzC0P
GWac = 4.75,
OrigLoanBal = 275000,
OrigLTV = 80,
=======
GWac = 4.339,
OrigLoanBal = 308856,
OrigLTV = 77.5,
>>>>>>> .merge_file_tSAnNq
AmortizationType = "fixed",
AmortizationTerm = 30,
Index = "None",
Margin = 0,
<<<<<<< .merge_file_8yzC0P
FirstPmtDate = "01-01-2013",
FinalPmtDate = "01-01-2043",
=======
FirstPmtDate = "06-01-2015",
FinalPmtDate = "06-01-2045",
>>>>>>> .merge_file_tSAnNq
Servicing = 0.25,
PMI = 0.25,
GFeePremium = 0.25,
InitialInterest = FALSE,
InterestOnlyPeriod = 0,
<<<<<<< .merge_file_8yzC0P
FirstPrinPaymentDate = "1-01-2013",
BalloonPmt = FALSE,
BalloonDate = "00-00-0000",
MBSFactor = 1,
OriginalBal = 10000000,
CurrentBal = 10000000,
Model = "FH30.Generic",
Burnout = 25,
SATO = 0.75
)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
MakeMBSDetails(
Cusip = "23456789",
ID = "bondlabMBS4",
BondType = "MBS",
Sector = "MBS",
Coupon = 4.0,
IssueDate = "01-01-2013",
DatedDate = "01-01-2013",
Maturity = "01-01-2043",
LastPmtDate = "01-01-2013",
NextPmtDate = "02-01-2013",
Term = 360,
WAM = 0,
WALA = 360,
PaymentDelay = 24,
Moody = "Aaa",
SP = "AAA",
BondLab = "Aaa",
Frequency = 12,
BondBasis = "30360",
GWac = 4.75,
OrigLoanBal = 275000,
OrigLTV = 80,
AmortizationType = "fixed",
AmortizationTerm = 30,
Index = "None",
Margin = 0,
FirstPmtDate = "01-01-2013",
FinalPmtDate = "01-01-2043",
Servicing = 0.25,
PMI = 0.25,
GFeePremium = 0.25,
InitialInterest = FALSE,
InterestOnlyPeriod = 0,
FirstPrinPaymentDate = "1-01-2013",
BalloonPmt = FALSE,
BalloonDate = "00-00-0000",
MBSFactor = 1,
OriginalBal = 10000000,
CurrentBal = 10000000,
Model = "FH30.Generic",
Burnout = 25,
SATO = 0.75
)
library(BondLab)
library(BondLab)
library(BondLab)
source(ScenarioObjects)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
BondLabSetUp()
library(BondLab)
library(BondLab)
rep(-25, 7)
rep("-25", 7)
library(BondLab)
library(BondLab)
BondLabSetUp()
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
BondLabSetUp()
do.call(source,
list(file = paste(system.file(package = "BondLab"), "/Scenario/Scenario_YieldCurve", sep = ""),
local = TRUE))
library(BondLab)
=======
FirstPrinPaymentDate = "06-01-2015",
BalloonPmt = FALSE,
BalloonDate = "00-00-0000",
MBSFactor =  0.8981391,
OriginalBal = 42931052.0000,
CurrentBal = 38558054.0900,
Model = "FN30.Generic",
Burnout = 25,
SATO = 0.25
)
bond.id <- MBS(MBS.id = "3138YY6Q1")
PassThrough <- KDS_PassThrough(
bond.id = "3138YY6Q1",
trade.date = "07-14-2016",
settlement.date = "08-11-2016",
original.bal = OriginalBal(bond.id),
price = "108-00",
prepayment = "MODEL",
CPR = .10,
shift = "D25s",
begin.cpr = .002,
end.cpr = .06,
seasoning.period = 30)
start <- proc.time()
PassThrough <- KDS_PassThrough(
bond.id = "3138YY6Q1",
trade.date = "07-14-2016",
settlement.date = "08-11-2016",
original.bal = OriginalBal(bond.id),
price = "108-00",
prepayment = "MODEL",
CPR = .10,
shift = "D25s",
begin.cpr = .002,
end.cpr = .06,
seasoning.period = 30)
proc.time() - start
start <- proc.time()
set.seed(300)
OAS <- Mortgage.OAS(
bond.id = "3138YY6Q1",
trade.date = "07-28-2016",
settlement.date = "08-11-2016",
original.bal = 100000,
price = "110-00",
sigma = .20/sqrt(240),
paths = 300)
proc.time() - start
hist(PriceDist(OAS),
breaks = seq(from = min, to = max, by = .5)
)
barplot(OAS@KeyRateDuration, names.arg = OAS@KeyRateTenor)
#' A function to calcualte the cashflow of the REMIC collateral
#'
#' Calculate the REMIC collateral cashflow
#' @param bond.id a character the bond cusip or id
#' @param settlement.date a character the settlement date
#' @param term.structure a character refering to object of type TermStructure
#' @param principal a character the current balance contributed to the REMIC
#' @param PSA the PSA assumtion used to price the deal
#' @export CollateralCashFlow
CollateralCashFlow <- function(bond.id = "character",
settlement.date = "character",
term.structure = "character",
principal = numeric(),
PSA = numeric()){
MBS <- MBS(MBS.id = bond.id)
TermStructure <- term.structure
MortgageRate <- MtgRate()
ModelTune <- ModelTune(MBS)
Vector <- PrepaymentModel(
bond.id = MBS,
TermStructure = TermStructure,
MortgageRate = MortgageRate,
ModelTune = ModelTune,
Burnout = BurnOut(MBS),
PrepaymentAssumption = "PPC",
begin.cpr = .002 * (PSA/PSA.basis),
end.cpr = .06 * (PSA/PSA.basis),
seasoning.period = 30)
CollateralCashFlow <- CashFlowEngine(
bond.id = MBS,
settlement.date = settlement.date,
principal = principal,
PrepaymentAssumption = Vector)}
#' A function to calculate REMIC deal original balance on data.tree
#'
#' Function calculates original balance across tree
#' @export DealCurrBal
DealCurrBal <- function(self){
sum(sapply(self$children, function(x){x$origbal}))
}
library(BondLab)
string <- list(25, 35, 45)
string
string = c(25, 35, 45)
string
string(1)
string[1]
string[2]
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
<<<<<<< .merge_file_Gzz0Qz
=======
>>>>>>> .merge_file_tSAnNq
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
<<<<<<< .merge_file_8yzC0P
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
do.call(source,
list(file = paste(system.file(package = "BondLab"), "/Scenario/Scenario_YieldCurve", sep = ""),
local = TRUE))
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
SpotRate<-
spotrates()
library(BondLab)
SpotRate<-
SpotRate()
SpotRate
SpotRate<-
library(BondLab)
install.packages("SPU")
install.packages("spuRs")
library("spuRs", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
EstimYTM(coupon = .05, coupon.frequency = 12, years.mat = 30, face.value = 100, price = 100)
EstimYTM(coupon = .05, coupon.frequency = 2, years.mat = 30, face.value = 100, price = 100)
EstimYTM(coupon = .05, coupon.frequency = 12, years.mat = 30, face.value = 100, price = 100)
EstimYTM(coupon = .05/12, coupon.frequency = 12, years.mat = 30, face.value = 100, price = 100)
EstimYTM(coupon = .05, coupon.frequency = 12, years.mat = 30, face.value = 100, price = 100)
EstimYTM(coupon = .05, coupon.frequency = 2, years.mat = 30, face.value = 100, price = 100)
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
=======
detach("package:BondLab", unload=TRUE)
detach("package:KDSBLX", unload=TRUE)
library(BondLab)
detach("package:KDSBLX", unload=TRUE)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="~/Library/R/3.3/library")
detach("package:BondLab", unload=TRUE)
library("KDSBLX", lib.loc="~/Library/R/3.3/library")
detach("package:KDSBLX", unload=TRUE)
library("BondLab", lib.loc="~/Library/R/3.3/library")
library("KDSBLX", lib.loc="~/Library/R/3.3/library")
detach("package:KDSBLX", unload=TRUE)
detach("package:BondLab", unload=TRUE)
library("KDSBLX", lib.loc="~/Library/R/3.3/library")
library("BondLab", lib.loc="~/Library/R/3.3/library")
library("BondLab", lib.loc="~/Library/R/3.3/library")
library(BondLab)
library(BondLab)
install.packages("~/BondLab_0.0.0.9000.tar.gz", repos = NULL, type = "source")
library(BondLab)
ls -l /Library/Frameworks/R.framework/Versions/
install.packages(c("curl", "knitr", "stringr", "ucminf"))
install.packages(c("mgcv", "survival"), lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
library(BondLab)
>>>>>>> .merge_file_omeHwv
<<<<<<< HEAD
=======
>>>>>>> .merge_file_tSAnNq
>>>>>>> BondLab_X
library(BondLab)
remove.packages("rgl")
install.packages("rgl")
library(BondLab)
<<<<<<< HEAD
300/12
1.5^(1/25)
library(BondLab)
=======
>>>>>>> master
library(BondLab)
<<<<<<< HEAD
42 * 300
1500 * 300
library(BondLab)
=======
>>>>>>> master
10000000 * (0.12/100)
library(BondLab)
.01^2
library(BondLab)
,
library(BondLab)
31 * 12
library(BondLab)
1.05/1.03
(1.05/1.03)
library(BondLab)
1/(1.05/1.03)
library(BondLab)
.3 * .02
.015^2
library(BondLab)
0^2
library(BondLab)
CIRSim(kappa = .3,
theta = .02,
shortrate = .002,
T = (nrow(matmatrix)/2) + 1,
step = 6/months.in.year,
sigma = sigma,
N = 1)
CIRSim(kappa = .3,
theta = .02,
shortrate = .002,
T = (nrow(matmatrix)/2) + 1,
step = 6/12,
sigma = sigma,
N = 1)
CIRSim(kappa = .3,
theta = .02,
shortrate = .002,
T = 30 + 1,
step = 6/12,
sigma = sigma,
N = 1)
CIRSim(kappa = .3,
theta = .02,
shortrate = .002,
T = 30 + 1,
step = 6/12,
sigma = 0,
N = 1)
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
60 * 30
(60 * 30)/60
60 * 30
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
222000/12
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
BondLabSetUp()
MBS(MBS.id = "FHQ41072")
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
