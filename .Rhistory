ScenarioSpreadToCurve = list()
ScenarioWAL = list()
ScenarioModDuration = list()
for(i in 1:6){
ScenarioName = append(ScenarioName,bond.id@Scenario[i][[1]]@Name)
ScenarioYieldToMaturity = append(ScenarioYieldToMaturity, bond.id@Scenario[i][[1]]@YieldToMaturity)
ScenarioSpreadToCurve = append(ScenarioSpreadToCurve, bond.id@Scenario[i][[1]]@SpreadToInterCurve)
ScenarioWAL = append(ScenarioWAL, bond.id@Scenario[i][[1]]@WAL)
ScenarioModDuration = append(ScenarioModDuration, bond.id@Scenario[i][[1]]@ModDuration)
}
Result <- cbind(ScenarioName, ScenarioYieldToMaturity, ScenarioSpreadToCurve, ScenarioWAL)
return(Result)
}
print(ExtractScenario(bondlabMBS4))
ExtractScenario <- function(bond.id = character){
ScenarioName = list()
ScenarioYieldToMaturity = list()
ScenarioSpreadToCurve = list()
ScenarioWAL = list()
ScenarioModDuration = list()
for(i in 1:6){
ScenarioName = append(ScenarioName,bond.id@Scenario[i][[1]]@Name)
ScenarioYieldToMaturity = append(ScenarioYieldToMaturity, bond.id@Scenario[i][[1]]@YieldToMaturity)
ScenarioSpreadToCurve = append(ScenarioSpreadToCurve, bond.id@Scenario[i][[1]]@SpreadToInterCurve)
ScenarioWAL = append(ScenarioWAL, bond.id@Scenario[i][[1]]@WAL)
ScenarioModDuration = append(ScenarioModDuration, bond.id@Scenario[i][[1]]@ModDuration)
}
Result <- cbind(ScenarioName, ScenarioYieldToMaturity, ScenarioSpreadToCurve, ScenarioWAL, ScenarioModDuration)
return(Result)
}
print(ExtractScenario(bondlabMBS4))
print(melt(ExtractScenario(bondlabMBS4)))
print(cast(melt(ExtractScenario(bondlabMBS4))))
print(melt(ExtractScenario(bondlabMBS4)))
print(ExtractScenario(bondlabMBS4))
print(ExtractScenario(bondlabMBS4))
print(transpose(ExtractScenario(bondlabMBS4)))
print(t(ExtractScenario(bondlabMBS4)))
bond.id@Scenario[1][[1]]@Name
bondlabMBS4@Scenario[1][[1]]@Name
print(t(ExtractScenario(bondlabMBS4)))
print(ExtractScenario(bondlabMBS4))
ExtractScenario <- function(bond.id = character){
ScenarioName = list()
ScenarioYieldToMaturity = list()
ScenarioSpreadToCurve = list()
ScenarioWAL = list()
ScenarioModDuration = list()
for(i in 1:6){
ScenarioName = append(ScenarioName,bond.id@Scenario[i][[1]]@Name)
ScenarioYieldToMaturity = append(ScenarioYieldToMaturity, bond.id@Scenario[i][[1]]@YieldToMaturity) * 100
ScenarioSpreadToCurve = append(ScenarioSpreadToCurve, bond.id@Scenario[i][[1]]@SpreadToInterCurve)
ScenarioWAL = append(ScenarioWAL, bond.id@Scenario[i][[1]]@WAL)
ScenarioModDuration = append(ScenarioModDuration, bond.id@Scenario[i][[1]]@ModDuration)
}
Result <- cbind(ScenarioName, ScenarioYieldToMaturity, ScenarioSpreadToCurve, ScenarioWAL, ScenarioModDuration)
return(Result)
}
print(ExtractScenario(bondlabMBS4))
ExtractScenario <- function(bond.id = character){
ScenarioName = list()
ScenarioYieldToMaturity = list()
ScenarioSpreadToCurve = list()
ScenarioWAL = list()
ScenarioModDuration = list()
for(i in 1:6){
ScenarioName = append(ScenarioName,bond.id@Scenario[i][[1]]@Name)
ScenarioYieldToMaturity = append(ScenarioYieldToMaturity, bond.id@Scenario[i][[1]]@YieldToMaturity * 100)
ScenarioSpreadToCurve = append(ScenarioSpreadToCurve, bond.id@Scenario[i][[1]]@SpreadToInterCurve)
ScenarioWAL = append(ScenarioWAL, bond.id@Scenario[i][[1]]@WAL)
ScenarioModDuration = append(ScenarioModDuration, bond.id@Scenario[i][[1]]@ModDuration)
}
Result <- cbind(ScenarioName, ScenarioYieldToMaturity, ScenarioSpreadToCurve, ScenarioWAL, ScenarioModDuration)
return(Result)
}
print(ExtractScenario(bondlabMBS4))
xtable(ExtractScenario(bondlabMBS4))
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
xtable(ExtractScenario(bondlabMBS4))
xtable(t(ExtractScenario(bondlabMBS4)))
bondlabMBS4 <- PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 1017.5, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
bondlabMBS4 <- PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 107.5, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
xtable(ExtractScenario(bondlabMBS4))
xtable(t(ExtractScenario(bondlabMBS4)))
xtable(t(ExtractScenario(bondlabMBS4)), digits = 2)
bondlabMB4@price
bondlabMBS4@Price
system.time(PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 107.5, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL"))
1000/60
prod(1+Scen.test@SMM)
Scen.test@SMM
Scen.test1[1][[1]]@SMM
Scen.test[1][[1]]@SMM
Scen.test[1]
Scen.test
Scen.test[1]
Scen.test
str(Scen.test)
Scen.test[1]
Scen.test@Scenario[1]
Scen.test@Scenario[1][[1]]@SMM
1+Scen.test@Scenario[1][[1]]@SMM
prod(1+Scen.test@Scenario[1][[1]]@SMM)
prod(1+Scen.test@Scenario[1][[1]]@SMM)-1
prod(1+Scen.test@Scenario[1][[1]]@SMM)^(1/360)
prod(1+Scen.test@Scenario[1][[1]]@SMM)^(1/360)
1-.007
1-(1-.007)
1-(1-.007)^12
prod(1+Scen.test@Scenario[1][[2]]@SMM)^(1/360)
prod(1+Scen.test@Scenario[2][[1]]@SMM)^(1/360)
prod(1+Scen.test@Scenario[2][[1]]@SMM)^(1/360)
prod(1+Scen.test@Scenario[2][[1]]@SMM)^(1/360)
1-(1-.003)^(1/360)
1-(1-.003)^(12)
prod(1+Scen.test@Scenario[3][[1]]@SMM)^(1/360)
SMM = 1-SMM
library(BondLab)
ExtractScenario <- function(bond.id = character){
ScenarioName = list()
ScenarioCPR = list()
ScenarioYieldToMaturity = list()
ScenarioSpreadToCurve = list()
ScenarioWAL = list()
ScenarioModDuration = list()
for(i in 1:6){
ScenarioName = append(ScenarioName,bond.id@Scenario[i][[1]]@Name)
ScenarioCPR = append(ScenarioCPR,  SMMVector.To.CPR(bond.id@Scenario[i][[1]]@SMM, length(bond.id@Scenario[i][[1]]@SMM)))
ScenarioYieldToMaturity = append(ScenarioYieldToMaturity, bond.id@Scenario[i][[1]]@YieldToMaturity * 100)
ScenarioSpreadToCurve = append(ScenarioSpreadToCurve, bond.id@Scenario[i][[1]]@SpreadToInterCurve)
ScenarioWAL = append(ScenarioWAL, bond.id@Scenario[i][[1]]@WAL)
ScenarioModDuration = append(ScenarioModDuration, bond.id@Scenario[i][[1]]@ModDuration)
}
Result <- cbind(ScenarioName, ScenarioYieldToMaturity, ScenarioSpreadToCurve, ScenarioWAL, ScenarioModDuration)
return(Result)
ExtractScenario <- function(bond.id = character){
ScenarioName = list()
ScenarioCPR = list()
ScenarioYieldToMaturity = list()
ScenarioSpreadToCurve = list()
ScenarioWAL = list()
ScenarioModDuration = list()
for(i in 1:6){
ScenarioName = append(ScenarioName,bond.id@Scenario[i][[1]]@Name)
ScenarioCPR = append(ScenarioCPR,  SMMVector.To.CPR(bond.id@Scenario[i][[1]]@SMM, length(bond.id@Scenario[i][[1]]@SMM)))
ScenarioYieldToMaturity = append(ScenarioYieldToMaturity, bond.id@Scenario[i][[1]]@YieldToMaturity * 100)
ScenarioSpreadToCurve = append(ScenarioSpreadToCurve, bond.id@Scenario[i][[1]]@SpreadToInterCurve)
ScenarioWAL = append(ScenarioWAL, bond.id@Scenario[i][[1]]@WAL)
ScenarioModDuration = append(ScenarioModDuration, bond.id@Scenario[i][[1]]@ModDuration)
}
Result <- cbind(ScenarioName, ScenarioYieldToMaturity, ScenarioSpreadToCurve, ScenarioWAL, ScenarioModDuration)
return(Result)
}
xtable(t(ExtractScenario(bondlabMBS4)), digits = 2)
ExtractScenario <- function(bond.id = character){
ScenarioName = list()
ScenarioCPR = list()
ScenarioYieldToMaturity = list()
ScenarioSpreadToCurve = list()
ScenarioWAL = list()
ScenarioModDuration = list()
for(i in 1:6){
ScenarioName = append(ScenarioName,bond.id@Scenario[i][[1]]@Name)
ScenarioCPR = append(ScenarioCPR,  SMMVector.To.CPR(bond.id@Scenario[i][[1]]@SMM, length(bond.id@Scenario[i][[1]]@SMM)))
ScenarioYieldToMaturity = append(ScenarioYieldToMaturity, bond.id@Scenario[i][[1]]@YieldToMaturity * 100)
ScenarioSpreadToCurve = append(ScenarioSpreadToCurve, bond.id@Scenario[i][[1]]@SpreadToInterCurve)
ScenarioWAL = append(ScenarioWAL, bond.id@Scenario[i][[1]]@WAL)
ScenarioModDuration = append(ScenarioModDuration, bond.id@Scenario[i][[1]]@ModDuration)
}
Result <- cbind(ScenarioName, Scenario.CPR, ScenarioYieldToMaturity, ScenarioSpreadToCurve, ScenarioWAL, ScenarioModDuration)
return(Result)
}
xtable(t(ExtractScenario(bondlabMBS4)), digits = 2)
ExtractScenario <- function(bond.id = character){
ScenarioName = list()
ScenarioCPR = list()
ScenarioYieldToMaturity = list()
ScenarioSpreadToCurve = list()
ScenarioWAL = list()
ScenarioModDuration = list()
for(i in 1:6){
ScenarioName = append(ScenarioName,bond.id@Scenario[i][[1]]@Name)
ScenarioCPR = append(ScenarioCPR,  SMMVector.To.CPR(bond.id@Scenario[i][[1]]@SMM, length(bond.id@Scenario[i][[1]]@SMM)))
ScenarioYieldToMaturity = append(ScenarioYieldToMaturity, bond.id@Scenario[i][[1]]@YieldToMaturity * 100)
ScenarioSpreadToCurve = append(ScenarioSpreadToCurve, bond.id@Scenario[i][[1]]@SpreadToInterCurve)
ScenarioWAL = append(ScenarioWAL, bond.id@Scenario[i][[1]]@WAL)
ScenarioModDuration = append(ScenarioModDuration, bond.id@Scenario[i][[1]]@ModDuration)
}
Result <- cbind(ScenarioName, ScenarioCPR, ScenarioYieldToMaturity, ScenarioSpreadToCurve, ScenarioWAL, ScenarioModDuration)
return(Result)
}
xtable(t(ExtractScenario(bondlabMBS4)), digits = 2)
library(BondLab)
ExtractScenario <- function(bond.id = character){
ScenarioName = list()
ScenarioCPR = list()
ScenarioYieldToMaturity = list()
ScenarioSpreadToCurve = list()
ScenarioWAL = list()
ScenarioModDuration = list()
for(i in 1:6){
ScenarioName = append(ScenarioName,bond.id@Scenario[i][[1]]@Name)
ScenarioCPR = append(ScenarioCPR,  SMMVector.To.CPR(bond.id@Scenario[i][[1]]@SMM, length(bond.id@Scenario[i][[1]]@SMM)))
ScenarioYieldToMaturity = append(ScenarioYieldToMaturity, bond.id@Scenario[i][[1]]@YieldToMaturity * 100)
ScenarioSpreadToCurve = append(ScenarioSpreadToCurve, bond.id@Scenario[i][[1]]@SpreadToInterCurve)
ScenarioWAL = append(ScenarioWAL, bond.id@Scenario[i][[1]]@WAL)
ScenarioModDuration = append(ScenarioModDuration, bond.id@Scenario[i][[1]]@ModDuration)
}
Result <- cbind(ScenarioName, ScenarioCPR, ScenarioYieldToMaturity, ScenarioSpreadToCurve, ScenarioWAL, ScenarioModDuration)
return(Result)
}
xtable(t(ExtractScenario(bondlabMBS4)), digits = 2)
ExtractScenario <- function(bond.id = character){
ScenarioName = list()
ScenarioCPR = list()
ScenarioYieldToMaturity = list()
ScenarioSpreadToCurve = list()
ScenarioWAL = list()
ScenarioModDuration = list()
for(i in 1:6){
ScenarioName = append(ScenarioName,bond.id@Scenario[i][[1]]@Name)
ScenarioCPR = append(ScenarioCPR,  SMMVector.To.CPR(bond.id@Scenario[i][[1]]@SMM, length(bond.id@Scenario[i][[1]]@SMM)))
ScenarioYieldToMaturity = append(ScenarioYieldToMaturity, bond.id@Scenario[i][[1]]@YieldToMaturity * 100)
ScenarioSpreadToCurve = append(ScenarioSpreadToCurve, bond.id@Scenario[i][[1]]@SpreadToInterCurve)
ScenarioWAL = append(ScenarioWAL, bond.id@Scenario[i][[1]]@WAL)
ScenarioModDuration = append(ScenarioModDuration, bond.id@Scenario[i][[1]]@ModDuration)
}
Result <- cbind(ScenarioName, ScenarioCPR * 100, ScenarioYieldToMaturity, ScenarioSpreadToCurve, ScenarioWAL, ScenarioModDuration)
return(Result)
}
xtable(t(ExtractScenario(bondlabMBS4)), digits = 2)
ExtractScenario <- function(bond.id = character){
ScenarioName = list()
ScenarioCPR = list()
ScenarioYieldToMaturity = list()
ScenarioSpreadToCurve = list()
ScenarioWAL = list()
ScenarioModDuration = list()
for(i in 1:6){
ScenarioName = append(ScenarioName,bond.id@Scenario[i][[1]]@Name)
ScenarioCPR = append(ScenarioCPR,  SMMVector.To.CPR(bond.id@Scenario[i][[1]]@SMM, length(bond.id@Scenario[i][[1]]@SMM)) * 100)
ScenarioYieldToMaturity = append(ScenarioYieldToMaturity, bond.id@Scenario[i][[1]]@YieldToMaturity * 100)
ScenarioSpreadToCurve = append(ScenarioSpreadToCurve, bond.id@Scenario[i][[1]]@SpreadToInterCurve)
ScenarioWAL = append(ScenarioWAL, bond.id@Scenario[i][[1]]@WAL)
ScenarioModDuration = append(ScenarioModDuration, bond.id@Scenario[i][[1]]@ModDuration)
}
Result <- cbind(ScenarioName, ScenarioCPR, ScenarioYieldToMaturity, ScenarioSpreadToCurve, ScenarioWAL, ScenarioModDuration)
return(Result)
}
xtable(t(ExtractScenario(bondlabMBS4)), digits = 2)
sum(Scen.test@Scenario[2][[1]]@PrepaidPrin)
sum(Scen.test@Scenario[2][[1]]@PrepaidPrin) / sum(Scen.test@Scenario[2][[1]]@ScheduledPrin)
sum(Scen.test@Scenario[2][[1]]@PrepaidPrin) / (Scen.test@Scenario[2][[1]]@BeginningBal[1] - sum(Scen.test@Scenario[2][[1]]@ScheduledPrin))
SMMVector.to.CPR(Scen.test@Scenario[1][[1]]@SMM, length(Scen.test@Scenario[1][[1]]@SMM))
SMMVector.To.CPR(Scen.test@Scenario[1][[1]]@SMM, length(Scen.test@Scenario[1][[1]]@SMM))
print(SMMVector.To.CPR(Scen.test@Scenario[1][[1]]@SMM, length(Scen.test@Scenario[1][[1]]@SMM)))
plot(bondlabMBS4)
bondlabMBS4
bondlabMBS4 <- PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 105.75, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
bondlabMBS4@YieldToMaturity
ExtractScenario <- function(bond.id = character){
ScenarioName = list()
ScenarioCPR = list()
ScenarioYieldToMaturity = list()
ScenarioSpreadToCurve = list()
ScenarioWAL = list()
ScenarioModDuration = list()
for(i in 1:6){
ScenarioName = append(ScenarioName,bond.id@Scenario[i][[1]]@Name)
ScenarioCPR = append(ScenarioCPR,  SMMVector.To.CPR(bond.id@Scenario[i][[1]]@SMM, length(bond.id@Scenario[i][[1]]@SMM)) * 100)
ScenarioYieldToMaturity = append(ScenarioYieldToMaturity, bond.id@Scenario[i][[1]]@YieldToMaturity * 100)
ScenarioSpreadToCurve = append(ScenarioSpreadToCurve, bond.id@Scenario[i][[1]]@SpreadToInterCurve)
ScenarioWAL = append(ScenarioWAL, bond.id@Scenario[i][[1]]@WAL)
ScenarioModDuration = append(ScenarioModDuration, bond.id@Scenario[i][[1]]@ModDuration)
}
Result <- cbind(ScenarioName, ScenarioCPR, ScenarioYieldToMaturity, ScenarioSpreadToCurve, ScenarioWAL, ScenarioModDuration)
return(Result)
}
xtable(t(ExtractScenario(bondlabMBS4)), digits = 2)
1.61-1.06
bondlabMBS55 <- PassThroughAnalytics(bond.id = "bondlabMBS55", original.bal = 100000, price = 105.75, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
bondlabMBS55 <- PassThroughAnalytics(bond.id = "bondlabMBS55", original.bal = 100000, price = 107.50, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
bondlabMBS55 <- PassThroughAnalytics(bond.id = "bondlabMBS55", original.bal = 100000, price = 107.50, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
rm(bondlabMBS55)
xtable(t(ExtractScenario(bondlabMBS55)), digits = 2)
bondlabMBS55 <- PassThroughAnalytics(bond.id = "bondlabMBS55", original.bal = 100000, price = 107.50, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
xtable(t(ExtractScenario(bondlabMBS55)), digits = 2)
xtable(t(ExtractScenario(bondlabMBS55)), digits = 2)
xtable(t(ExtractScenario(bondlabMBS4)), digits = 2)
bondlabMBS55 <- PassThroughAnalytics(bond.id = "bondlabMBS55", original.bal = 100000, price = 107.50, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
bondlabMBS5.5 <- new("MBSDetails",
Cusip = "01234567",
ID = "bondlabMBS55",
BondType = "MBS",
Sector = "MBS",
Coupon = 5.5,
IssueDate = "10-01-2011",
DatedDate = "10-01-2011",
Maturity = "10-01-2041",
LastPmtDate = "01-01-2013",
NextPmtDate = "02-01-2013",
PaymentDelay = 24,
Moody = "Aaa",
SP = "AAA",
BondLab = "Aaa",
Frequency = 12,
BondBasis = "30360",
GWac = 6.10,
AmortizationType = "fixed",
AmortizationTerm = 30,
Index = "None",
Margin = 0,
FirstPmtDate = "10-01-2011",
FinalPmtDate = "10-01-2041",
Servicing = 0.25,
PMI = 0.25,
Gfee = 0.25,
InitialInterest = "no",
InterestOnlyPeriod = 0,
FirstPrinPaymentDate = "10-01-2011",
BalloonPmt = "no",
BalloonDate = "00-00-0000",
MBSFactor = .8,
Model = "FH30.Generic",
Burnout = 1.75
bondlabMBS5.5 <- new("MBSDetails",
Cusip = "01234567",
ID = "bondlabMBS55",
BondType = "MBS",
Sector = "MBS",
Coupon = 5.5,
IssueDate = "10-01-2011",
DatedDate = "10-01-2011",
Maturity = "10-01-2041",
LastPmtDate = "01-01-2013",
NextPmtDate = "02-01-2013",
PaymentDelay = 24,
Moody = "Aaa",
SP = "AAA",
BondLab = "Aaa",
Frequency = 12,
BondBasis = "30360",
GWac = 6.10,
AmortizationType = "fixed",
AmortizationTerm = 30,
Index = "None",
Margin = 0,
FirstPmtDate = "10-01-2011",
FinalPmtDate = "10-01-2041",
Servicing = 0.25,
PMI = 0.25,
Gfee = 0.25,
InitialInterest = "no",
InterestOnlyPeriod = 0,
FirstPrinPaymentDate = "10-01-2011",
BalloonPmt = "no",
BalloonDate = "00-00-0000",
MBSFactor = .8,
Model = "FH30.Generic",
Burnout = 1.75
)
setwd("~/BondLabSource/Classes")
setwd("~/BondLab/BondData")
readRDS(bondlabMBS55)
setwd("~/BondLab/BondData")
readRDS(bondlabMBS55)
readRDS(bondlabMBS55.rds)
readRDS(bondlabMBS55.rds)
readRDS(bondlabMBS55.rds)
setwd("~/BondLab/BondData")
readRDS(bondlabMBS55.rds)
rm(bondlabMBS5.5)
bondlabMBS55 <- new("MBSDetails",
Cusip = "01234567",
ID = "bondlabMBS55",
BondType = "MBS",
Sector = "MBS",
Coupon = 5.5,
IssueDate = "10-01-2011",
DatedDate = "10-01-2011",
Maturity = "10-01-2041",
LastPmtDate = "01-01-2013",
NextPmtDate = "02-01-2013",
PaymentDelay = 24,
Moody = "Aaa",
SP = "AAA",
BondLab = "Aaa",
Frequency = 12,
BondBasis = "30360",
GWac = 6.10,
AmortizationType = "fixed",
AmortizationTerm = 30,
Index = "None",
Margin = 0,
FirstPmtDate = "10-01-2011",
FinalPmtDate = "10-01-2041",
Servicing = 0.25,
PMI = 0.25,
Gfee = 0.25,
InitialInterest = "no",
InterestOnlyPeriod = 0,
FirstPrinPaymentDate = "10-01-2011",
BalloonPmt = "no",
BalloonDate = "00-00-0000",
MBSFactor = .8,
Model = "FH30.Generic",
Burnout = 1.75
)
saveRDS(bondlabMBS55, "bondlabMBS55.rds")
)
saveRDS(bondlabMBS55, "bondlabMBS55.rds")
readRDS("bondlabMBS55.rds")
test <- readRDS("bondlabMBS55.rds")
rm(test)
setwd("~/BondLab")
bondlabMBS55 <- PassThroughAnalytics(bond.id = "bondlabMBS55", original.bal = 100000, price = 107.50, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
xtable(t(ExtractScenario(bondlabMBS55)), digits = 2)
test <- readRDS("bondlabMBS55.rds")
setwd("~/BondLab/BondData")
test <- readRDS("bondlabMBS55.rds")
setwd("~/BondLab")
plot((1-(1-bondlabMBS55@Scenario[1][[1]]@SMM)^12)*100, type = "l")
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS55@Scenario[2][[1]]@SMM)^12)*100, type = "l")
bondlabMBS55 <- PassThroughAnalytics(bond.id = "bondlabMBS55", original.bal = 100000, price = 107.50, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
rm(bondlabMBS55)
bondlabMBS55 <- PassThroughAnalytics(bond.id = "bondlabMBS55", original.bal = 100000, price = 107.50, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
1-(1-.012)^12
1-(1-.008)^12
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS4@Scenario[2][[1]]@SMM)^12)*100, type = "l")
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS55@Scenario[2][[1]]@SMM)^12)*100, type = "l")
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS4@Scenario[2][[1]]@SMM)^12)*100, type = "l")
#graph 14
BurnoutData <- data.frame(c(seq(1,360,1)))
BurnoutData[2] <- Burnout(beta1 = -.01, beta2 = -.01, MaxIncen = 25, LoanAge = BurnoutData[,1])
colnames(BurnoutData) <- c("LoanAge", "Burnout")
BurnoutData <- melt(BurnoutData, id = "LoanAge")
ggplot(BurnoutData, aes(x=LoanAge, y = value , linetype = variable)) +
geom_line(size = .5, colour = "black", alpha = .75, linetype = 2) +
geom_point(size = 1, colour = "black", alpha = .5) +
theme_minimal() +
ylab("Burnout (%)")+
xlab("Loan Age") +
theme(panel.grid.major = element_line(size = .25, color = "grey")) +
theme(axis.text = element_text(size = 15)) +
theme(axis.title = element_text(size = 20))
1-(1-.035)^12
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS55@Scenario[2][[1]]@SMM)^12)*100, type = "l")
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS55@Scenario[1][[1]]@SMM)^12)*100, type = "l")
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS55@Scenario[4][[1]]@SMM)^12)*100, type = "l")
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS55@Scenario[1][[1]]@SMM)^12)*100, type = "l")
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS4@Scenario[2][[1]]@SMM)^12)*100, type = "l")
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS55@Scenario[1][[1]]@SMM)^12)*100, type = "l")
bondlabMBS55@Scenario
bondlabMBS55@Scenario[1][[1]]
library(BondLab)
bondlabMBS55 <- PassThroughAnalytics(bond.id = "bondlabMBS55", original.bal = 100000, price = 107.50, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS55@Scenario[1][[1]]@SMM)^12)*100, type = "l")
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS55@Scenario[1][[1]]@SMM)^12)*100, type = "l")
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS4@Scenario[2][[1]]@SMM)^12)*100, type = "l")
library(BondLab)
bondlabMBS55 <- PassThroughAnalytics(bond.id = "bondlabMBS55", original.bal = 100000, price = 107.50, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
#This is how I access the class Scenario Set
plot((1-(1-bondlabMBS55@Scenario[1][[1]]@SMM)^12)*100, type = "l")
library(BondLab)
bondlabMBS55 <- PassThroughAnalytics(bond.id = "bondlabMBS55", original.bal = 100000, price = 107.50, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
library(BondLab)
bondlabMBS55 <- PassThroughAnalytics(bond.id = "bondlabMBS55", original.bal = 100000, price = 107.50, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA50", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL")
