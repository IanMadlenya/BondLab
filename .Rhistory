library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("KDSBLX", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
190 * 1000000000 * 1/264
190 * 1000000000 * (1/264)/100
190 * 1000000000 * ((1/264)/100) * 52
library(BondLab)
UseMethod?
UseMethod ?
? UseMethod
library(BondLab)
300000 * 2000
300000/10
30000 * 2000
60*12
600*12
library(BondLab)
1.03^13
(1.03^13) * 869000
(1.035^13) * 869000
(1.04^13) * 869000
(1.03^13) * 869000
(1.03^13) * 869000 *.96
((1.03^13) * 869000 *.96) - 375000
1400000 - ((1.03^13) * 869000 *.96) - 375000
1400000 - (((1.03^13) * 869000 *.96) - 375000)
(1.03^13) * 869000 *.96
(1.03^13) * 869000 + 200000
315000*2000*12
library(BondLab)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
PrepaymentModelFunctions()
library(BondLab)
ModelFunctions()
library(BondLab)
SeasonalFactors ?
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
60000000000/200000
(60000000000/200000)^(1/30)
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
DefaultOrigLTVMult
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
DefaultOrigLTVMult()
DefaultOrigLTVMult
DefaultOrigLTVMult()
DefaultOrigLTVMult
library(BondLab)
DefaultOrigLTVMult(PPMFunctions)
DefautOrigLTVMult
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
DefaultOrigLTVMult()
DefaultRamp()
DefaultRamp
DefaultOrigLTVMult
library(BondLab)
FirstPmtDate
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
FirstPrinPaymentDate
showMethods(FirstPrinPaymentDate)
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
FirstPrinPaymentDate
library(BondLab)
log(1)
library(BondLab)
TimePeriod(BondCashFlow)
TimePeriod(BondCashFlows)
library(BondLab)
dput(BondCashFlows)
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
x <- seq(0.2, 0.8, by=0.1)
print(x)
[1] 0.2 0.3 0.4 0.5 0.6 0.7 0.8
y <- seq(0.3, 0.6, by=0.1)
print(y)
[1] 0.3 0.4 0.5 0.6
print(x[2:5])
[1] 0.3 0.4 0.5 0.6
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
traceback( Mtg.Scenario(bond.id= bond.id,
rates.data = rates,
settlement.date = "01-10-2013",
price = 105,
original.bal = 1000000,
scenario = "UA100",
horizon.months = 12,
method = "ns",
prepayment = "MODEL",
horizon.nominal.spread = 1.34))
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
horizon.nominal.spread = 1.34))
traceback( Mtg.Scenario(bond.id= bond.id,
rates.data = rates,
settlement.date = "01-10-2013",
price = 105,
original.bal = 1000000,
scenario = "UA100",
horizon.months = 12,
method = "ns",
prepayment = "MODEL",
horizon.nominal.spread = 1.34))
library(BondLab)
new("Mtg.ScenarioSet", Scenario = list("UA100"))
new("Mtg.Scenario", Period = 1)
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
MtgScenario()
library(BondLab)
test <- new("Mtg.ScenarioSet", Scenario = list("UA100"))
Mtg.ScenarioSet(test)
library(BondLab)
ScenarioCall(Scenario = "NC")
test <- ScenarioCall(Scenario = "NC")
Formula(test)
library(BondLab)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
ScenarioFormula(test)
new("Scenario", Name = "test", Type = "UA", Horizon = "36", ShiftType = "100", Shiftbps = "100", Formula = function(rates.data, Shiftbps))
new("Scenario", Name = "test", Type = "UA", Horizon = "36", ShiftType = "100", Shiftbps = "100", Formula = function(rates.data, Shiftbps)
new("Scenario",
Name = "test",
Type = "UA",
Horizon = "Immediate",
ShiftType = "100",
Shiftbps = "100",
Formula = function(rates.data, Shiftbps))
test@Formula
new("Scenario",
Name = "test",
Type = "UA",
Horizon = "Immediate",
ShiftType = "100",
Shiftbps = "100",
Formula = function(rates.data, Shiftbps){
as.character(as.numeric(rates.data[1,2:length(rates.data)]) + Shiftbps/100)
})
new("Scenario",
Name = "test",
Type = "UA",
Horizon = "Immediate",
ShiftType = "Parallel",
Shiftbps = 50,
Formula = function(rates.data, Shiftbps){
as.character(as.numeric(rates.data[1,2:length(rates.data)]) + Shiftbps/100)
})
test2 <- new("Scenario",
Name = "test",
Type = "UA",
Horizon = "Immediate",
ShiftType = "Parallel",
Shiftbps = 50,
Formula = function(rates.data, Shiftbps){
as.character(as.numeric(rates.data[1,2:length(rates.data)]) + Shiftbps/100)
})
Shiftbps(test)
library(BondLab)
Name(test)
library(BondLab)
test <- ScenarioCall(Scenario = "NC")
Shiftbps(Scenario)
Shiftbps(test)
Name(test)
Horizon(test)
ScenarioFormula(test)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
new("MtgScenario", period = 1)
new("MtgScenario", Period = 1)
library(BondLab)
ScenarioCall("NC")
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ScenarioCall("NC")
test <- ScenarioCall("NC")
Horzion(test)
Horizon(test)
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
CPR.To.SMM(.1)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
CPR.To.SMM(.1)
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
MakeMBSDetails(
Cusip = "23456789",
ID = "bondlabMBS4",
BondType = "MBS",
Sector = "MBS",
Coupon = 4.0,
IssueDate = "01-01-2013",
DatedDate = "01-01-2013",
Maturity = "01-01-2043",
LastPmtDate = "01-01-2013",
NextPmtDate = "02-01-2013",
Term = 360,
WAM = 0,
WALA = 360,
PaymentDelay = 24,
Moody = "Aaa",
SP = "AAA",
BondLab = "Aaa",
Frequency = 12,
BondBasis = "30360",
GWac = 4.75,
OrigLoanBal = 275000,
OrigLTV = 80,
AmortizationType = "fixed",
AmortizationTerm = 30,
Index = "None",
Margin = 0,
FirstPmtDate = "01-01-2013",
FinalPmtDate = "01-01-2043",
Servicing = 0.25,
PMI = 0.25,
GFeePremium = 0.25,
InitialInterest = FALSE,
InterestOnlyPeriod = 0,
FirstPrinPaymentDate = "1-01-2013",
BalloonPmt = FALSE,
BalloonDate = "00-00-0000",
MBSFactor = 1,
OriginalBal = 10000000,
CurrentBal = 10000000,
Model = "FH30.Generic",
Burnout = 25,
SATO = 0.75
)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
MakeMBSDetails(
Cusip = "23456789",
ID = "bondlabMBS4",
BondType = "MBS",
Sector = "MBS",
Coupon = 4.0,
IssueDate = "01-01-2013",
DatedDate = "01-01-2013",
Maturity = "01-01-2043",
LastPmtDate = "01-01-2013",
NextPmtDate = "02-01-2013",
Term = 360,
WAM = 0,
WALA = 360,
PaymentDelay = 24,
Moody = "Aaa",
SP = "AAA",
BondLab = "Aaa",
Frequency = 12,
BondBasis = "30360",
GWac = 4.75,
OrigLoanBal = 275000,
OrigLTV = 80,
AmortizationType = "fixed",
AmortizationTerm = 30,
Index = "None",
Margin = 0,
FirstPmtDate = "01-01-2013",
FinalPmtDate = "01-01-2043",
Servicing = 0.25,
PMI = 0.25,
GFeePremium = 0.25,
InitialInterest = FALSE,
InterestOnlyPeriod = 0,
FirstPrinPaymentDate = "1-01-2013",
BalloonPmt = FALSE,
BalloonDate = "00-00-0000",
MBSFactor = 1,
OriginalBal = 10000000,
CurrentBal = 10000000,
Model = "FH30.Generic",
Burnout = 25,
SATO = 0.75
)
library(BondLab)
library(BondLab)
library(BondLab)
source(ScenarioObjects)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
BondLabSetUp()
library(BondLab)
library(BondLab)
rep(-25, 7)
rep("-25", 7)
library(BondLab)
library(BondLab)
BondLabSetUp()
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
BondLabSetUp()
do.call(source,
list(file = paste(system.file(package = "BondLab"), "/Scenario/Scenario_YieldCurve", sep = ""),
local = TRUE))
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
do.call(source,
list(file = paste(system.file(package = "BondLab"), "/Scenario/Scenario_YieldCurve", sep = ""),
local = TRUE))
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
Price <- 104-12
Price <104.875
Price <- 104.875
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
exp.01*10
exp(.01 * 5)
.05 * exp(3)
library(BondLab)
-210 * 100 * .0025^2
-210 * .0025^2
-210 * 100 * .0025^2
.5 * - 210 * .0025^2
.5 * - 210 * .0025^2 * 100
-210 * .0025^2
-210 * .0025^2 * 100
library(BondLab)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
dput(MortgageEffectiveMeasures)
library(BondLab)
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
`devtools::document()`
devtools::document()
library(BondLab)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("BH", "boot", "car", "cluster", "crayon", "curl", "data.tree", "DBI", "devtools", "dfoptim", "DiagrammeR", "dplyr", "evaluate", "formatR", "ggplot2", "git2r", "googleVis", "gtable", "highr", "htmltools", "httr", "jsonlite", "knitr", "lazyeval", "lme4", "lubridate", "Matrix", "mclust", "mgcv", "mime", "munsell", "networkD3", "nlme", "nnet", "openssl", "plyr", "quantreg", "Rcpp", "RcppEigen", "rmarkdown", "rstudioapi", "scales", "stringi", "survival", "testthat", "visNetwork", "withr", "zoo"))
install.packages(c("BH", "boot", "car", "cluster", "crayon",
library(BondLab)
MBS(MBS.id = "bondlabMBS4")
library(BondLab)
100000 * 250
25000000 * .5
(25000000 * .5)/3
library(BondLab)
new("TermStructure")
library(BondLab)
40 * 156 * 400
700000/2040
40 * 156 * 350
library(BondLab)
library(BondLab)
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("termstrc")
library("termstrc", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("termstrc", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("termstrc", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("termstrc", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
remove.packages(termstrc)
install.packages(c("BH", "boot", "class", "cluster", "codetools", "crayon", "curl", "data.tree", "devtools", "dfoptim", "DiagrammeR", "digest", "DT", "evaluate", "forecast", "foreign", "formatR", "ggplot2", "git2r", "googleVis", "gridExtra", "gtable", "gWidgets2", "gWidgets2RGtk2", "highr", "htmltools", "htmlwidgets", "httr", "jsonlite", "KernSmooth", "knitr", "lattice", "lubridate", "MASS", "Matrix", "mclust", "memoise", "mgcv", "mime", "munsell", "nlme", "nnet", "optextras", "packrat", "plyr", "R6", "Rcpp", "RcppArmadillo", "RCurl", "rgl", "rmarkdown", "rpart", "rsconnect", "rstudioapi", "rversions", "scales", "shiny", "spatial", "stringi", "survival", "testthat", "tseries", "urca", "visNetwork", "withr", "XML", "xml2", "zoo"), lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("BH", "boot", "class", "cluster", "codetools",
install.packages(c("BH", "boot", "cluster"), lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
remove.packages(termstrc)
remove.packages(termstrc)
remove.packages(termstrc)
remove.packages(termstrc, "/Library/Frameworks/R.framework/Resources")
remove.packages(termstrc, "/Library/Frameworks/R.framework/Resources")
remove.packages(termstrc)
install.packages("termstrc", lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("termstrc", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
demo(topic, package = NULL, lib.loc = NULL,
character.only = FALSE, verbose = getOption("verbose"),
echo = TRUE, ask = getOption("demo.ask"),
encoding = getOption("encoding"))
install.packages(c("XML", "xml2", "zoo"), lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages(c("dfoptim", "DiagrammeR", "digest", "DT"), lib="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
install.packages("roxygen2")
install.packages("devtools")
install.packages("lubridate")
install.packages("termstrc")
install.packages("optimx")
install.packages("RCurl")
install.packages("XML")
library(BondLab)
install.packages("httr")
