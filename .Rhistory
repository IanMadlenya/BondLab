library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
27000000/2600
library(BondLab)
6000000/60000
2000 * 60000
200 * 60000
200 * 150000
100 * 200000
200 * 60000
20 * 200000
4000000 * 10
library(BondLab)
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
devtools::build_vignettes(pkg ="~/Users/glennschultz/BondLab")
devtools::build_vignettes(pkg ="/Users/glennschultz/BondLab")
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
MortgageScenario
devtools::build_vignettes("Users/BondLab")
devtools::build_vignettes("Users/glennschultz/BondLab")
devtools::build_vignettes("/Users/glennschultz/BondLab")
library(BondLab)
25000/12
5000 * 12
99999.99 - 50000
49999/12
2100 * 2
4150 + 4200
120000/5
2600* 12
120000/5
75000/5
25000 *12
library(BondLab)
the
library(BondLab)
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
github_pull
github_pull()
github_pull
install_github
install_remotes
library(BondLab)
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
build_vignettes(/Users/glennschultz/"BondLab")
build_vignettes("Users/glennschultz/BondLab")
build_vignettes("/Users/glennschultz/BondLab")
library(BondLab)
172 * 6
library(BondLab)
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
library("termstrc", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
.35/100
4/100
library(BondLab)
devtools::build_vignettes("BondLab")
devtools::build_vignettes("~/BondLab")
library(BondLab)
devtools::build_vignettes("~/BondLab")
library(BondLab)
devtools::build_vignettes("BondLab")
devtools::build_vignettes("~/BondLab")
library(BondLab)
devtools::build_vignettes("~/BondLab")
library(BondLab)
devtools::build_vignettes("~/BondLab")
library(BondLab)
devtools::build_vignettes("~/BondLab")
library(BondLab)
devtools::build_vignettes("~/BondLab")
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
devtools::build_vignettes("BondLab")
devtools::build_vignettes("~/BondLab")
library(BondLab)
devtools::build_vignettes("~/BondLab")
library(BondLab)
devtools::build_vignettes("~/BondLab")
library(BondLab)
devtools::build_vignettes("~/BondLab")
library(BondLab)
unlink('vignettes/BondLab_cache', recursive = TRUE)
library(BondLab)
devtools::build_vignettes("~/BondLab")
library(BondLab)
devtools::build_vignettes("~/BondLab")
library(BondLab)
library(BondLab)
library(BondLab)
try(SwapRateData(datafile = paste(system.file(package = "BondLab"),"/RatesData/Today.csv", sep = ""),
maturityvector = maturity))}
try(SwapRateData(datafile = paste(system.file(package = "BondLab"),"/RatesData/Today.csv", sep = ""),
maturityvector = maturity))
library("BondLab", lib.loc="~/Library/R/3.3/library")
try(SwapRateData(datafile = paste(system.file(package = "BondLab"),"/RatesData/Today.csv", sep = ""),
maturityvector = maturity))
library(BondLab)
try(SwapRateData(datafile = paste(system.file(package = "BondLab"),"/RatesData/Today.csv", sep = ""),
maturityvector = maturity))
maturity <- c("",.0833, .25, .5, 1, 2, 3, 4, 5, 7, 10, 30)
try(SwapRateData(datafile = paste(system.file(package = "BondLab"),"/RatesData/Today.csv", sep = ""),
maturityvector = maturity))
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
devtools::build_vignettes("~glennschultz/BondLab")
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
12/12
frequency/12
2/12
12/6
6/12
12/12
library(BondLab)
0.75/3
0.75/2
0.75/200 * 1000
1007.5/1000
library(BondLab)
devtools::use_build_ignore(index.html, escape = TRUE, pkg = "BondLab")
devtools::use_build_ignore(index.html, escape = TRUE, pkg = "~/glennschultz/BondLab")
devtools::use_build_ignore(index.html, escape = TRUE, pkg = "~/BondLab")
devtools::use_build_ignore(params.json, escape = TRUE, pkg = "~/BondLab")
devtools::use_build_ignore("params.json", escape = TRUE, pkg = "~/BondLab")
devtools::use_build_ignore("index.html", escape = TRUE, pkg = "~/BondLab")
library(BondLab)
devtools::use_build_ignore("sandbox", escape = TRUE, pkg = "~/BondLab")
library(BondLab)
dataSwapURL <- "https://www.theice.com/marketdata/reports/icebenchmarkadmin/ISDAFIXHistoricalRates.shtml"
dataLiborURL <- "https://www.theice.com/marketdata/reports/icebenchmarkadmin/ICELiborHistoricalRates.shtml"
SwapPath <- paste(system.file(package = "BondLab"),"/RatesData/Swap.csv", sep = "")
LiborPath <- paste(system.file(package = "BondLab"),"/RatesData/Libor.csv", sep = "")
library(BondLab)
5000000/75000000
library(BondLab)
(469000 * 12)/76544000
(486000 * 12)/75339000
10000 * 100
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
detach("package:BondLab", unload=TRUE)
library(BondLab)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("roxygen2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(BondLab)
getwd()
ls
dir
getwd()
library(BondLab)
1000 * 50
50000 * 12
3000 * 50 * 12
30000 * 50 * 12
library(BondLab)
getwd
wd
getwd
getwd()
library(BondLab)
install.packages("purr")
library(BondLab)
108 * 16
50/108
108 * 244
library(BondLab)
Mortgage.Monthly.Payment(orig.bal = "1000", note.rate = "6", term.mos = "360")
Mortgage.Monthly.Payment(orig.bal = 1000, note.rate = 6, term.mos = 360)
Mortgage.Monthly.Payment(orig.bal = "1000", note.rate = 6, term.mos = 360)
Mortgage.Monthly.Payment(orig.bal = 1000, note.rate = 6, term.mos = 360)
library(BondLab)
MortgageScenario
HorizonMos
showMethods(MortgageScenario)
library(BondLab)
showMethods(MortgageScenario)
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
showMethods(MortgageScenario)
MortgageScenario
showMethods
showMethods(MortgageScenario)
library(BondLab)
MortgageScenario
showMethods(MortgageScenario)
library(BondLab)
MortgageScenario
HorizonMos
library(BondLab)
showMethods(MortgageScenario)
library(BondLab)
HorizonMos
library(BondLab)
MortgageScenario
library(BondLab)
showMethods(MortgageScenario)
library(BondLab)
? initialize
library(BondLab)
showMethods(MortgageScenario)
library(BondLab)
showMethods(MortgageScenario)
MortgageScenario
initialize
skelton
method.skeleton("MortgageScenario")
method.skeleton("MortgageScenario", "MortgageScenario")
method.skeleton("HorizonMons", "newHR")
library(BondLab)
method.skeleton("initialize", "MortgageScenario")
library(BondLab)
? BondCashFlows
library(BondLab)
1/14
library(BondLab)
MortgageRate()
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
MortgageRate()
library(BondLab)
MortgageRate()
MtgRate()
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
MtgRate()
MortgageRate()
MtgRate()
library(BondLab)
MtgRate()
MortgageRate
MortgageRate()
library(BondLab)
# Test the bonds in the data folders for Anthony's class The bonds that are
# available are detailed below and the term structure is 08-15-2016
# Treasury settlement date is 08-18-2016
# Mortgage settlement date 09-15-2016
# Call the UST bonds by cusip number
UST1125082021 <- Bond(Bond.id = "912828S76")
UST075072018 <- Bond(Bond.id = "912828S68")
UST225082046 <- Bond(Bond.id = "912810RT7")
price <- PriceTypes(Price = "100.00")
Curve <- Rates(trade.date = "08-15-2016")
TermStructure <- TermStructure(rates.data = Curve)
CashFlow <- BondCashFlows(bond.id = UST075072018,
principal = 1000,
settlement.date = "08-15-2016",
price = "100-00")
CurveSpreads <- CurveSpreads(rates.data = Curve,
CashFlow = CashFlow,
TermStructure = TermStructure,
proceeds = 1000 * 1)
BondKeyRate <- BondTermStructure(bond.id = UST075072018,
Rate.Delta = 0.25,
TermStructure = TermStructure,
principal = 1000,
price = PriceDecimalString(price),
cashflow = CashFlow)
NCBondCsenario <- BondScenario(bond.id = UST075072018,
settlement.date = "08-18-2016",
rates.data = Curve,
price = "100.00",
principal = 1000,
scenario = "NCs",
horizon.months = 12,
horizon.spot.spread = -.21)
BondAnalytics(bond.id = "UST075072018",
principal = 1000,
price = "100-00",
trade.date = "08-15-2016",
settlement.date = "08-18-2016")
FNAR7401 <- MBS(MBS.id = "3138W5GK8")
FHQ41163 <- MBS(MBS.id = "3132WEJH6")
FHQ41072 <- MBS(MBS.id = "3132WEFN7")
Curve <- Rates(trade.date = "08-15-2016")
TermStructure <- TermStructure(rates.data = Curve)
prepayment <- PrepaymentModel(bond.id = FNAR7401,
TermStructure = TermStructure(
rates.data = Curve, method = "dl"),
MortgageRate = MtgRate(),
ModelTune = ModelTune(MBS(MBS.id = "3138W5GK8")),
Burnout = Burnout(MBS(MBS.id = "3138W5GK8")),
PrepaymentAssumption = "MODEL")
SpreadToPrice <- SpreadToPrice(bond.id = FNAR7401,
trade.date = "08-15-2016",
settlement.date = "08-15-2016",
PrepaymentAssumption = "CPR",
spread = "120",
CPR = 8.5)
FNAR7401CF <- MortgageCashFlow(bond.id = FNAR7401,
original.bal = 1000000,
settlement.date = "08-18-2016",
price = PriceDecimalString(SpreadToPrice),
PrepaymentAssumption =
PrepaymentModel(
bond.id = FNAR7401,
TermStructure = TermStructure(
rates.data = Curve, method = "dl"),
MortgageRate = MtgRate(),
ModelTune = ModelTune(MBS(MBS.id = "3138W5GK8")),
Burnout = Burnout(MBS(MBS.id = "3138W5GK8")),
PrepaymentAssumption = "MODEL"))
Spreads <- CurveSpreads(rates.data = Curve,
CashFlow = FNAR7401CF,
TermStructure = TermStructure,
proceeds = (PriceBasis(SpreadToPrice) *
1000000 *
MBSFactor(FNAR7401)) + Accrued(FNAR7401CF))
NCScenario <- MortgageScenario(bond.id = FNAR7401,
settlement.date = "08-18-2016",
rates.data = Curve,
price = PriceDecimalString(SpreadToPrice),
original.bal = 1000000,
scenario = "NCs",
horizon.months = 12,
method = "dl",
prepayment = "MODEL",
horizon.spot.spread = ZeroVolSpread(Spreads))
library(BondLab)
MortgageRate <- MortgageRate()
library(BondLab)
PriceTypes(price = 100.00)
PriceTypes(price = 100)
format(100, nsmall = 2)
format(100.0000000, nsmall = 2)
sprintf("%.8f", 100)
library(BondLab)
PriceTypes(price = 100)
format("100", nsmall = 2)
format(as.numeric("100"), nsmall = 2)
library(BondLab)
format("100", nsmall = 2)
PriceTypes(price = 100)
PriceTypes(price = "100")
library(BondLab)
PriceTypes(price = "100")
library(BondLab)
PriceTypes(price = "100.00")
library(BondLab)
PriceTypes(price = "100.00")
digits(as.numeric(100),8)
round(as.numeric(100),8)
library(BondLab)
PriceTypes(price = "100.00")
library(BondLab)
PriceTypes(price = "100.00")
library(BondLab)
PriceTypes(price = "100.00")
library(BondLab)
PriceTypes(price = "100.00")
PriceTypes(price = "100")
library(BondLab)
PriceTypes(price = "100")
PriceTypes(price = "100.00")
