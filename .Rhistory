library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
CPR.To.SMM(CPR = .06)
library(BondLab)
library("Companion2IMBS", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:Companion2IMBS", unload=TRUE)
detach("package:BondLab", unload=TRUE)
library("Companion2IMBS", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
CreditEnhancement(bond.id = bondlabMBS4, original.balance = 100000,
trade.date = "01-10-2013", settlement.date = "01-13-2013", sigma = .2, HPA = .025,
HPV = .015, paths = 100)
vignette?
vignette
vignette("BondLab")
PPC.Ramp
standardGeneric(PPC.Ramp)
standardGeneric("PPC.Ramp")
getMethod("PPC.Ramp", "Bondlab")
getMethod
getMethod(PPC.Ramp)
getMethod(REMIC.OAS)
getMethod(CalibrateCIR)
getMethod(PassThroughAnalytics)
getMethod(PassThroughAnalytics)
getMethod(PrepaymentAssumption)
PrepaymentAssumption
getMethod(MortgageCashFlow)
getMethod(MortgageCashFlow)
getMethod(PassThroughAnalytics)
1000 * 5000
1000 * 5000 * 12
1000 * 5000 * 12 * .40
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
devtools::use_travis(pkg = "BondLab")
devtools::use_travis()
library(BondLab)
library(BondLab)
MakeSchedule(bond.id = "BondLabMBS4",
DealName = "BondLabPACInverse",
Group = 1,
original.bal = 200000000,
first.pmtdate = "01-25-2013",
trade.date = "01-10-2013",
settlement.date = "01-13-2013",
price = 105.75,
begin.cpr = .2,
end.cpr = 6,
seasoning.period = 30,
lower.PSA = 75,
upper.PSA = 250)
MakeRAID(DealName = "BondLabPACInverse",
Issuer = "Bondlab",
DealPriceDate = "12-01-2012",
DealSettlementDate = "01-01-2013",
Underwriter = "Bondlab",
NumberofTranches = 4,
NumberPacSchedules = 1,
NumberofGroups = 1,
DealSize = 200000000,
CollateralAmount = 200000000)
MakeCollateral(DealName = "BondLabPACInverse",
Group = 1,
Cusip = list("bondlabMBS4"),
OrigBal = list("200000000"))
MakeTranche(DealName = "BondLabPACInverse_test",
TrancheNumber = "1",
TrancheName = "A",
TranchePrincipal = "Pass_Through",
TrancheInterest = "Fix",
TranchePrincipalDesc = "PAC",
TrancheInterestDesc = "Fix",
Cusip = "BondLabPAC2",
TrancheOrigBal = 148769215,
TrancheDatedDate  = "01-01-2013",
TrancheFirstPmtDate = "01-15-2013",
TrancheLastPmtDate = "12-15-2042",
TrancheNextPmtDate = "01-15-2013",
TrancheCoupon = 2.25,
Delay = 15,
PrinPmtFrequency = 12,
InterestPmtFrequency = 12,
FloaterIndex = "999",
FloaterMargin = 0,
FloaterCap = 0,
FloaterFloor = 0,
FloaterFormula = function(){},
PacLowBand = 75,
PacHighBand = 250,
Group = 1,
Schedule = TRUE,
Fixed = TRUE)
MakeTranche(DealName = "BondLabPACInverse",
TrancheNumber = "2",
TrancheName = "B",
TranchePrincipal = "Pass_Through",
TrancheInterest = "Float",
TranchePrincipalDesc = "CMP",
TrancheInterestDesc = "Floater",
Cusip = "BondLabFloater",
TrancheOrigBal = 30738471,
TrancheDatedDate  = "01-01-2013",
TrancheFirstPmtDate = "01-15-2013",
TrancheLastPmtDate = "12-15-2042",
TrancheNextPmtDate = "01-15-2013",
TrancheCoupon = 0.55,
Delay = 15,
PrinPmtFrequency = 12,
InterestPmtFrequency = 12,
FloaterIndex = "1Mo. LIBOR",
FloaterMargin = .30,
FloaterCap = 6.66,
FloaterFloor = 0.33,
FloaterFormula = function(Index = "numeric", FloaterCap = "numeric", FloaterMargin = "numeric", FloaterFloor = "numeric")
{min(FloaterCap, max((Index + FloaterMargin), FloaterFloor))},
PacLowBand = 000,
PacHighBand = 000,
Group = 1,
Schedule = TRUE,
Fixed = FALSE)
MakeTranche(DealName = "BondLabPACInverse",
TrancheNumber = "3",
TrancheName = "C",
TranchePrincipal = "Pass_Through",
TrancheInterest = "Float",
TranchePrincipalDesc = "CMP",
TrancheInterestDesc = "Inverse Floater",
Cusip = "BondLabInverse",
TrancheOrigBal = 20492314,
TrancheDatedDate  = "01-01-2013",
TrancheFirstPmtDate = "01-15-2013",
TrancheLastPmtDate = "12-15-2042",
TrancheNextPmtDate = "01-15-2013",
TrancheCoupon = 8.835,
Delay = 15,
PrinPmtFrequency = 12,
InterestPmtFrequency = 12,
FloaterIndex = "1Mo. LIBOR",
FloaterMargin = 9.21,
FloaterCap = 9.21,
FloaterFloor = 0.00,
FloaterFormula = function(Index = "numeric", FloaterCap = "numeric", FloaterMargin = "numeric", FloaterFloor = "numeric")
{min(FloaterCap, max((-1.5 * Index) + FloaterMargin, FloaterFloor))},
PacLowBand = 000,
PacHighBand = 000,
Group = 1,
Schedule = TRUE,
Fixed = FALSE)
MakeTranche(DealName = "BondLabPACInverse",
TrancheNumber = "4",
TrancheName = "D",
TranchePrincipal = "Pass_Through",
TrancheInterest = "Fix",
TranchePrincipalDesc = "NTL",
TrancheInterestDesc = "Interest Only",
Cusip = "BondLabPACIO",
TrancheOrigBal = 148769215,
TrancheDatedDate  = "01-01-2013",
TrancheFirstPmtDate = "01-15-2013",
TrancheLastPmtDate = "12-15-2042",
TrancheNextPmtDate = "01-15-2013",
TrancheCoupon = 1.75,
Delay = 15,
PrinPmtFrequency = 12,
InterestPmtFrequency = 12,
FloaterIndex = "999",
FloaterMargin = 0,
FloaterCap = 1.75,
FloaterFloor = 1.75,
FloaterFormula = function(Index = "vector", FloaterCap = "numeric", FloaterMargin = "numeric", FloaterFloor = "numeric")
{min(FloaterCap, (max(Index + FloaterMargin, FloaterFloor)))},
PacLowBand = 75,
PacHighBand = 250,
Group = 1,
Schedule = TRUE,
Fixed = TRUE)
MakeRDME(DealName = "BondLabPACInverse",
TrancheNumber = 1,
Cusip = "BondLabPAC2",
PaymentDate = "01-01-2013",
Coupon = 2.25,
Factor = 1)
MakeRDME(DealName = "BondLabPACInverse",
TrancheNumber = 2,
Cusip = "BondLabFltr",
PaymentDate = "1-01-2013",
Coupon = 0.55,
Factor = 1)
MakeRDME(DealName = "BondLabPACInverse",
TrancheNumber = 3,
Cusip = "BondLabCMP1",
PaymentDate = "1-01-2013",
Coupon = 9.21,
Factor = 1)
MakeRDME(DealName = "BondLabPACInverse",
TrancheNumber = 4,
Cusip = "BondLabPACIO",
PaymentDate = "1-01-2013",
Coupon = 1.75,
Factor = 1)
RemicStructure("BondLabPACInverse")
RemicStructure(DealName = "BondLabPACInverse")
library(BondLab)
RemicStructure(DealName = "BondLabPACInverse")
library(BondLab)
RemicStructure(DealName = "BondLabPACInverse")
MakeRAID(DealName = "BondLabPACInverse",
Issuer = "Bondlab",
DealPriceDate = "12-01-2012",
DealSettlementDate = "01-01-2013",
Underwriter = "Bondlab",
NumberofTranches = 4,
NumberPacSchedules = 1,
NumberofGroups = 1,
DealSize = 200000000,
CollateralAmount = 200000000)
MakeRAID(DealName = "BondLabPACInverse",
Issuer = "Bondlab",
DealPriceDate = "12-01-2012",
DealSettlementDate = "01-01-2013",
Underwriter = "Bondlab",
NumberofTranches = 4,
NumberPacSchedules = 1,
NumberofGroups = 1,
DealSize = 200000000,
CollateralAmount = 200000000)
library(BondLab)
RemicStructure(DealName = "BondLabPACInverse")
library(BondLab)
RemicStructure(DealName = "BondLabPACInverse")
library(BondLab)
RemicStructure(DealName = "BondLabPACInverse")
library(BondLab)
gzfile(description = paste(system.file(package = "BondLab"), "/RAID/","RAIDFile"BondLabPACInverse,".rds", sep = ""))
gzfile(description = paste(system.file(package = "BondLab"), "/RAID/","BondLabPACInverse",".rds", sep = ""))
test <- gzfile(description = paste(system.file(package = "BondLab"), "/RAID/",RAIDFile,".rds", sep = ""))
test <- gzfile(description = paste(system.file(package = "BondLab"), "/RAID/","BondLabPACInverse",".rds", sep = ""))
test
library(BondLab)
RemicStructure(DealName = "BondLabPACInverse")
library(BondLab)
RemicStructure(DealName = "BondLabPACInverse")
library(BondLab)
install.packages("~/BondLab_0.0.0.9000.tar.gz", repos = NULL, type = "source")
MakeSchedule(bond.id = "BondLabMBS4",
DealName = "BondLabPACInverse",
Group = 1,
original.bal = 200000000,
first.pmtdate = "01-25-2013",
trade.date = "01-10-2013",
settlement.date = "01-13-2013",
price = 105.75,
begin.cpr = .2,
end.cpr = 6,
seasoning.period = 30,
lower.PSA = 75,
upper.PSA = 250)
MakeRAID(DealName = "BondLabPACInverse",
Issuer = "Bondlab",
DealPriceDate = "12-01-2012",
DealSettlementDate = "01-01-2013",
Underwriter = "Bondlab",
NumberofTranches = 4,
NumberPacSchedules = 1,
NumberofGroups = 1,
DealSize = 200000000,
CollateralAmount = 200000000)
MakeCollateral(DealName = "BondLabPACInverse",
Group = 1,
Cusip = list("bondlabMBS4"),
OrigBal = list("200000000"))
MakeTranche(DealName = "BondLabPACInverse_test",
TrancheNumber = "1",
TrancheName = "A",
TranchePrincipal = "Pass_Through",
TrancheInterest = "Fix",
TranchePrincipalDesc = "PAC",
TrancheInterestDesc = "Fix",
Cusip = "BondLabPAC2",
TrancheOrigBal = 148769215,
TrancheDatedDate  = "01-01-2013",
TrancheFirstPmtDate = "01-15-2013",
TrancheLastPmtDate = "12-15-2042",
TrancheNextPmtDate = "01-15-2013",
TrancheCoupon = 2.25,
Delay = 15,
PrinPmtFrequency = 12,
InterestPmtFrequency = 12,
FloaterIndex = "999",
FloaterMargin = 0,
FloaterCap = 0,
FloaterFloor = 0,
FloaterFormula = function(){},
PacLowBand = 75,
PacHighBand = 250,
Group = 1,
Schedule = TRUE,
Fixed = TRUE)
MakeRDME(DealName = "BondLabPACInverse_test",
TrancheNumber = 1,
Cusip = "BondLabPAC2",
PaymentDate = "01-01-2013",
Coupon = 2.25,
Factor = 1)
RemicStructure(DealName = "BondLabPACInverse")
library(BondLab)
RemicStructure(DealName = "BondLabPACInverse")
library(BondLab)
RemicStructure(DealName = "BondLabPACInverse")
RemicStructure(DealName = "BondLabPACInverse")
library(BondLab)
RemicStructure(DealName = "BondLabPACInverse")
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
connRAID <- gzfile(description = paste(system.file(package = "BondLab"),
"RAID/",DealName,".rds", sep = ""))
connRAID <- gzfile(description = paste(system.file(package = "BondLab"),
"RAID/BondLabPacInverse.rds"))
RAID <<- readRDS(connRAID)
connRAID
connRAID <- gzfile(description = paste(system.file(package = "BondLab"),
"/RAID/BondLabPacInverse.rds"))
RAID <<- readRDS(connRAID)
connRAID <- gzfile(description = paste(system.file(package = "BondLab"),
"/RAID/BondLabPacInverse.rds", sep = ""))
RAID <<- readRDS(connRAID)
library(BondLab)
library(BondLab)
library(BondLab)
RAID <- ReadRAID(RAIDFile = "BondLabPacInverse")
RAID <- ReadRAID(RAIDFile = "BondLabPacInverse")
RAID <- ReadRAID(RAIDFile = "BondLabPacInverse")
DealName  <- "BondLabPacInverse"
RAID <- ReadRAID(RAIDFile = DealName)
rm(RAID)
RAID <- ReadRAID(RAIDFile = DealName)
Tranche <<- Tranches(NumberofTranches = RAID@NumberofTranches, DealName = RAID@DealName)
library(BondLab)
Tranche <<- Tranches(NumberofTranches = RAID@NumberofTranches, DealName = RAID@DealName)
CollateralGroup <<- CollateralGroup(NumberofGroups = RAID@NumberofGroups, DealName = RAID@DealName)
library(BondLab)
CollateralGroup <<- CollateralGroup(NumberofGroups = RAID@NumberofGroups, DealName = RAID@DealName)
FactorData <<- RDMEData(NumberofTranches = RAID@NumberofTranches, DealName = RAID@DealName)
library(BondLab)
CollateralGroup <<- CollateralGroup(NumberofGroups = RAID@NumberofGroups, DealName = RAID@DealName)
library(BondLab)
CollateralGroup <<- CollateralGroup(NumberofGroups = RAID@NumberofGroups, DealName = RAID@DealName)
CollateralGroup1 <<- CollateralGroup(NumberofGroups = RAID@NumberofGroups, DealName = RAID@DealName)
FactorData <<- RDMEData(NumberofTranches = RAID@NumberofTranches, DealName = RAID@DealName)
library(BondLab)
FactorData <<- RDMEData(NumberofTranches = RAID@NumberofTranches, DealName = RAID@DealName)
REMIC <-new("REMICStructure",
DealName = RAID@DealName,
Issuer = RAID@Issuer,
DealPriceDate = RAID@DealPriceDate,
DealSettlementDate = RAID@DealSettlementDate,
Underwriter = RAID@Underwriter,
NumberofTranches = RAID@NumberofTranches,
NumberPacSchedules = RAID@NumberPacSchedules,
NumberofGroups = RAID@NumberofGroups,
DealSize = RAID@DealSize,
CollateralAmount = RAID@CollateralAmount,
Tranches = Tranche@Tranches,
CollateralGroup = CollateralGroup@Group,
TrancheFactors = FactorData@FactorData
)
library(BondLab)
CollateralGroup <<- CollateralGroup(NumberofGroups = RAID@NumberofGroups, DealName = RAID@DealName)
CollateralGroupData <<- CollateralGroup(NumberofGroups = RAID@NumberofGroups, DealName = RAID@DealName)
library(BondLab)
REMIC <-new("REMICStructure",
DealName = RAID@DealName,
Issuer = RAID@Issuer,
DealPriceDate = RAID@DealPriceDate,
DealSettlementDate = RAID@DealSettlementDate,
Underwriter = RAID@Underwriter,
NumberofTranches = RAID@NumberofTranches,
NumberPacSchedules = RAID@NumberPacSchedules,
NumberofGroups = RAID@NumberofGroups,
DealSize = RAID@DealSize,
CollateralAmount = RAID@CollateralAmount,
Tranches = Tranche@Tranches,
CollateralGroup = CollateralGroupData@Group,
TrancheFactors = FactorData@FactorData
)
SaveREMIC(DealName = DealName, file = REMIC)
REMICDeal(remic.deal = "BondLabPACInverse")
REMICDeal(remic.deal = "BondLabSEQ")
library(BondLab)
library(BondLab)
rm(CollateralGroup1)
rm(CollateralGroupData)
rm(FactorData)
rm(RAID)
rm(REMIC)
rm(Tranche)
RAID <- ReadRAID(RAIDFile = DealName)
Tranche <<- Tranches(NumberofTranches = RAID@NumberofTranches, DealName = RAID@DealName)
CollateralGroupData <<- CollateralGroup(NumberofGroups = RAID@NumberofGroups, DealName = RAID@DealName)
FactorData <<- RDMEData(NumberofTranches = RAID@NumberofTranches, DealName = RAID@DealName)
REMIC <-new("REMICStructure",
DealName = RAID@DealName,
Issuer = RAID@Issuer,
DealPriceDate = RAID@DealPriceDate,
DealSettlementDate = RAID@DealSettlementDate,
Underwriter = RAID@Underwriter,
NumberofTranches = RAID@NumberofTranches,
NumberPacSchedules = RAID@NumberPacSchedules,
NumberofGroups = RAID@NumberofGroups,
DealSize = RAID@DealSize,
CollateralAmount = RAID@CollateralAmount,
Tranches = Tranche@Tranches,
CollateralGroup = CollateralGroupData@Group,
TrancheFactors = FactorData@FactorData
)
SaveREMIC(DealName = DealName, file = REMIC)
REMIC
REMIC@FactorData
FactorData
FactorData
library(BondLab)
FactorData <<- RDMEData(NumberofTranches = RAID@NumberofTranches, DealName = RAID@DealName)
connREMIC <- gzfile(description = paste(system.file(package = "BondLab"),
"/REMICData/", DealName, ".rds", sep = ""))
saveRDS(REMIC, connREMIC)
close(connREMIC)
library(BondLab)
library(BondLab)
library(BondLab)
DealName <- BondLabPacInverse
DealName <- "BondLabPacInverse"
RAID <- ReadRAID(RAIDFile = DealName)
Tranche <- Tranches(NumberofTranches = RAID@NumberofTranches, DealName = RAID@DealName)
CollateralGroupData <- CollateralGroup(NumberofGroups = RAID@NumberofGroups, DealName = RAID@DealName)
FactorData <- RDMEData(NumberofTranches = RAID@NumberofTranches, DealName = RAID@DealName)
REMIC <-new("REMICStructure",
DealName = RAID@DealName,
Issuer = RAID@Issuer,
DealPriceDate = RAID@DealPriceDate,
DealSettlementDate = RAID@DealSettlementDate,
Underwriter = RAID@Underwriter,
NumberofTranches = RAID@NumberofTranches,
NumberPacSchedules = RAID@NumberPacSchedules,
NumberofGroups = RAID@NumberofGroups,
DealSize = RAID@DealSize,
CollateralAmount = RAID@CollateralAmount,
Tranches = Tranche@Tranches,
CollateralGroup = CollateralGroupData@Group,
TrancheFactors = FactorData@FactorData
)
connREMIC <- gzfile(description = paste(system.file(package = "BondLab"),
"/REMICData/", DealName, ".rds", sep = ""))
saveRDS(REMIC, connREMIC)
library(BondLab)
Tranche[1]
Tranche@Tranches[1]
REMICSchedules(REMIC.Tranche = Tranche@Tranches[1])
Tranche@Tranches[1]
Tranche@Tranches[1]@DealName
Tranche@Tranches[[1]]@DealName
REMICSchedules(REMIC.Tranche = Tranche@Tranches[[1]])
paste(system.file(package = "BondLab"), "/Schedules")
paste(system.file(package = "BondLab"), "/Schedules/BondLabPACO1_Group_1_Sch.rds")
test <- paste(system.file(package = "BondLab"), "/Schedules/BondLabPACO1_Group_1_Sch.rds")
readRDS(test)
test <- paste(system.file(package = "BondLab"), "/Schedules/BondLabPACO1_Group_1_Sch.rds", sep = "")
readRDS(test)
test
test <- paste(system.file(package = "BondLab"), "/Schedules/BondLabPACO1_Group_1_Sch.rds", sep = "")
readRDS(test)
test <- paste(system.file(package = "BondLab"), "/Schedules/", sep = "")
readRDS(test)
test <- paste(system.file(package = "BondLab"), "/Schedules/BondLabPACO1_Group_1_Sch.rds", sep = "")
readRDS(test)
test <- paste(system.file(package = "BondLab"), "/Schedules/BondLabPAC01_Group_1_Sch.rds", sep = "")
readRDS(test)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
install.packages("~/BondLab_0.0.0.9000.tar.gz", repos = NULL, type = "source")
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
install.packages("~/BondLab_0.0.0.9000.tar.gz", repos = NULL, type = "source")
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(BondLab)
install.packages("~/BondLab_0.0.0.9000.tar.gz", repos = NULL, type = "source")
detach("package:BondLab", unload=TRUE)
library("BondLab", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
