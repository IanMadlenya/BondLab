library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
set.seed(300)
system.time(MBS55.OAS <- PassThroughOAS(bond.id = "bondlabMBS55", trade.date = "01-10-2013", settlement.date = "01-13-2013", original.bal = 100000,
price = 107.5, short.rate = 0.0016, sigma = 0.015, paths = 5000, PrepaymentAssumption = "MODEL"))
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
library(BondLab)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
library(BondLab)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
library(BondLab)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
library(BondLab)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
library(BondLab)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
library(BondLab)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
library(BondLab)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
library(BondLab)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
library(BondLab)
library(BondLab)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
library(BondLab)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
library(BondLab)
test <- DollarRollAnalytics(bond.id = "bondlabMBS55", trade.date = "01-10-2013",
settlement.date = "01-14-2013", fwd.settlement.date = "02-12-2013",
original.bal = 1333333, price = 107.5, reinvestment.rate = 0.21/100,
finance.rate = 0.31/100, drop = 5/32, PrepaymentAssumption = "CPR", CPR = 30)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
test.scen <- PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
test.scen <<- PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
test.scen <- PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
test.scen <- PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
test.scen <- PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
library(BondLab)
test.scen <- PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
test.scen <- PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6)
rm(test.scen)
system.time(PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 100, trade.date = "01-10-2013",
settlement.date = "01-13-2013",  scenario.set = c("UA100", "UA150"),
PrepaymentAssumption = "CPR", CPR = 6))
system.time(bondlabMBS4 <- PassThroughAnalytics(bond.id = "bondlabMBS4", original.bal = 100000, price = 105.75, trade.date = "01-10-2013",
settlement.date = "01-13-2013", scenario.set = c("DA25", "NC", "UA50", "UA100", "UA150", "UA200"),
PrepaymentAssumption = "MODEL"))
library(BondLab)
library(BondLab)
REMIC.Deal <- REMICDeal(remic.deal = "BondLabSMBS")
library(BondLab)
REMIC.Deal <- REMICDeal(remic.deal = "BondLabSMBS")
library(BondLab)
library(BondLab)
REMIC.Deal <- REMICDeal(remic.deal = "BondLabSMBS")
library(BondLab)
REMIC.Deal@Group
REMIC.Deal@Group
REMIC.Deal@Group[1]
REMIC.Deal@Group[1]@Cusip
REMIC.Deal@Group[[1]]@Cusip
library(BondLab)
library(BondLab)
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1: Group.Counter){
paste("Collateral.Group","_",Group.Counter <- MBS(MBS.id = REMIC.Deal[[i]])}
library(BondLab)
library(BondLab)
for(i in 1: Group.Counter){
paste("Collateral.Group","_",as.character(i) <- MBS(MBS.id = REMIC.Deal[[i]])}
for(i in 1:Group.Counter){
paste("Collateral.Group","_",as.character(i) <- MBS(MBS.id = REMIC.Deal[[i]])}
library(BondLab)
for(i in 1:Group.Counter){
paste("Collateral.Group","_",as.character(i)) <- MBS(MBS.id = REMIC.Deal[[i]])}
library(BondLab)
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1:Group.Counter){
paste("Collateral.Group","_",as.character(i)) <- MBS(MBS.id = REMIC.Deal[[i]])}
REMIC.Deal[[1]]
library(BondLab)
for(i in 1:Group.Counter){
paste("Collateral.Group","_",as.character(i)) <- MBS(MBS.id = REMIC.Deal@Group[[i]]@Cusip)}
REMIC.Deal@Group[[1]]@Cusip
library(BondLab)
for(i in 1:Group.Counter){
paste("Collateral.Group","_",i) <- MBS(MBS.id = REMIC.Deal@Group[[i]]@Cusip)}
library(BondLab)
for(i in 1:Group.Counter){
twat <- MBS(MBS.id = REMIC.Deal@Group[[i]]@Cusip)}
library(BondLab)
for(i in 1:Group.Counter){
paste("Collateral.Group","_",i, sep = "") <- MBS(MBS.id = REMIC.Deal@Group[[i]]@Cusip)}
library(BondLab)
for(i in 1:Group.Counter){
paste("Collateral.Group","_") <- MBS(MBS.id = REMIC.Deal@Group[[i]]@Cusip)}
REMIC.Deal <- REMICDeal(remic.deal = "BondLabSMBS")
#-- call collateral group details
#-- must be able to call multiple collateral groups or loan level detail
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1:Group.Counter){
paste("Collateral.Group","_") <- MBS(MBS.id = REMIC.Deal@Group[[i]]@Cusip)}
library(BondLab)
for(i in 1:Group.Counter){
as.character(paste("Collateral.Group","_",i)) <- MBS(MBS.id = REMIC.Deal@Group[[i]]@Cusip)}
library(BondLab)
for(i in 1:Group.Counter){
as.character(paste("Collateral.Group","_",i)) <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))}
test <- paste("Collateral.Group", "_", 1)
for(i in 1:Group.Counter){
test <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))}
for(i in 1:Group.Counter){
paste("Collateral", "2", sep = "") <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))}
for(i in 1:Group.Counter){
as.character(paste("Collateral", "2", sep = "")) <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))}
for(i in 1:Group.Counter){
paste("6", "2") <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))}
for(i in 1:Group.Counter){
Collateral <- paste("Collateral_Group_", i)
Collateral <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))}
for(i in 1:Group.Counter){
paste("Collateral_Group_", i) <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))}
for(i in 1:Group.Counter){
Collateral <- paste("Collateral_Group_", i, ssep = "")
Collateral <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))}
for(i in 1:Group.Counter){
Collateral <- paste("Collateral_Group_", i, ssep = "")}
for(i in 1:Group.Counter){
Collateral <- paste("Collateral_Group_", i, ssep = "")}
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1:Group.Counter){
Collateral <- paste("Collateral_Group_", i, ssep = "")}
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1:Group.Counter){
Collateral <- paste("Collateral_Group_", i, ssep = "")}
#-- call REMIC deal data
REMIC.Deal <- REMICDeal(remic.deal = "BondLabSMBS")
#-- call collateral group details
#-- must be able to call multiple collateral groups or loan level detail
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1:Group.Counter){
Collateral <- paste("Collateral_Group_", i, ssep = "")}
REMIC.Deal <- REMICDeal(remic.deal = "BondLabSMBS")
#-- call collateral group details
#-- must be able to call multiple collateral groups or loan level detail
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1:Group.Counter){
Collateral <- paste("Collateral_Group_", i, ssep = "")
as.character(Collateral) <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))}
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1:Group.Counter){
Collateral <- paste("Collateral_Group_", i, ssep = "")
Collateral <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))}
REMIC.Deal <- REMICDeal(remic.deal = "BondLabSMBS")
Collateral <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))
Collateral <- MBS(MBS.id = as.character(REMIC.Deal@Group[[1]]@Cusip))
#-- call REMIC Trance
REMIC.Tranche <- MBS(MBS.id = "BondLabSMBSIO")
#-- call REMIC Deal Date
REMIC.Deal <- REMICDeal(remic.deal = REMIC.Tranche@DealName)
REMIC.Tranche <- MBS(MBS.id = "BondLabSMBSIO")
#-- call REMIC Deal Date
REMIC.Deal <- REMICDeal(remic.deal = REMIC.Tranche@DealName)
Collateral <- MBS(MBS.id = as.character(REMIC.Deal@Group[[1]]@Cusip))
paste("Collateral_Group_", i) <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))}
PrepaymentAssumption
MortgageCashFlow
Collateral.CashFlow <- MortgageCashFlow(bond.id = "Collateral",
original.bal = REMIC.Deal@CollateralAmount
settlement.date = "01-10-2013"
price = 105.75)
Collateral.CashFlow <- MortgageCashFlow(bond.id = "Collateral",
original.bal = REMIC.Deal@CollateralAmount,
settlement.date = "01-10-2013",
price = 105.75)
Collateral.CashFlow <- MortgageCashFlow(bond.id = Collateral,
original.bal = REMIC.Deal@CollateralAmount,
settlement.date = "01-10-2013",
price = 105.75)
Collateral.CashFlow <- MortgageCashFlow(bond.id = Collateral,
original.bal = REMIC.Deal@CollateralAmount,
settlement.date = "01-10-2013",
price = 105.75,
PrepaymentAssumption = PrepaymentAssumption)
PrepaymentAssumption <- PrepaymentAssumption(CPR = 6)
PrepaymentAssumption <- PrepaymentAssumption("CPR" = 6)
PrepaymentAssumption <- PrepaymentAssumption(PrepaymentAssumption = "CPR", CPR = 6)
PrepaymentAssumption <- PrepaymentAssumption(PrepaymentAssumption = "CPR", CPR = 6)
PrepaymentAssumption <- PrepaymentAssumption(bond.id = Collateral, PrepaymentAssumption = "CPR", CPR = 6)
PrepaymentAssumption
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
library(BondLab)
#-- call REMIC Trance
REMIC.Tranche <- MBS(MBS.id = "BondLabSMBSIO")
#-- call REMIC Deal Date
REMIC.Deal <- REMICDeal(remic.deal = REMIC.Tranche@DealName)
#    call collateral group details
#    must be able to call multiple collateral groups or loan level detail
#    This is a function that calls multiple collateral groups
#    and aggregates them into a single cash flow table for
#    the REMIC ...
#-- call the required rates data
rates.data <- Rates(trade.date = "01-10-2013")
REMIC.CashFlow <- function(REMIC.Deal = REMIC.Deal)
rates.data <- Rates(trade.date = "01-10-2013")
#-- call REMIC Trance
REMIC.Tranche <- MBS(MBS.id = "BondLabSMBSIO")
#-- call REMIC Deal Date
REMIC.Deal <- REMICDeal(remic.deal = REMIC.Tranche@DealName)
#    call collateral group details
#    must be able to call multiple collateral groups or loan level detail
#    This is a function that calls multiple collateral groups
#    and aggregates them into a single cash flow table for
#    the REMIC ...
#-- call the required rates data
rates.data <- Rates(trade.date = "01-10-2013")
rates.data <- Rates(trade.date = "01-10-2013")
#-- call REMIC Trance
REMIC.Tranche <- MBS(MBS.id = "BondLabSMBSIO")
#-- call REMIC Deal Date
REMIC.Deal <- REMICDeal(remic.deal = REMIC.Tranche@DealName)
rates.data <- Rates(trade.date = "01-10-2013")
library(BondLab)
rates.data <- Rates(trade.date = "01-10-2013")
Termstructure <- TermStructure(rates.data = rates.data)
REMIC.CashFlow <- function(REMIC.Deal = REMIC.Deal){
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1:Group.Counter){
Collateral <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))
PrepaymentAssumption <- PrepaymentAssumption(bond.id = Collateral,
TermStructure = TermStructure,
MortgageRate = MortgageRate,
ModelTune = ModelTune,
Burnout = Collateral@Burnout,
PrepaymentAssumption = "CPR", CPR = 6)
Collateral.CashFlow <- MortgageCashFlow(bond.id = Collateral,
original.bal = REMIC.Deal@CollateralAmount,
settlement.date = "01-10-2013",
price = 105.75,
PrepaymentAssumption = PrepaymentAssumption)
Total.Collateral.CashFlow <- Total.Collateral.CashFlow + Collateral.CashFlow
return(Total.Collateral.CashFlow)
}
}
REMIC.CashFlow <- function(REMIC.Deal = "character"){
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1:Group.Counter){
Collateral <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))
PrepaymentAssumption <- PrepaymentAssumption(bond.id = Collateral,
TermStructure = TermStructure,
MortgageRate = MortgageRate,
ModelTune = ModelTune,
Burnout = Collateral@Burnout,
PrepaymentAssumption = "CPR", CPR = 6)
Collateral.CashFlow <- MortgageCashFlow(bond.id = Collateral,
original.bal = REMIC.Deal@CollateralAmount,
settlement.date = "01-10-2013",
price = 105.75,
PrepaymentAssumption = PrepaymentAssumption)
Total.Collateral.CashFlow <- Total.Collateral.CashFlow + Collateral.CashFlow
return(Total.Collateral.CashFlow)
}
}
REMIC.Collateral.CashFlow <- function(REMIC.Deal = "character"){
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1:Group.Counter){
Collateral <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))
PrepaymentAssumption <- PrepaymentAssumption(bond.id = Collateral,
TermStructure = TermStructure,
MortgageRate = MortgageRate,
ModelTune = ModelTune,
Burnout = Collateral@Burnout,
PrepaymentAssumption = "CPR", CPR = 6)
Collateral.CashFlow <- MortgageCashFlow(bond.id = Collateral,
original.bal = REMIC.Deal@CollateralAmount,
settlement.date = "01-10-2013",
price = 105.75,
PrepaymentAssumption = PrepaymentAssumption)
Total.Collateral.CashFlow <- Total.Collateral.CashFlow + Collateral.CashFlow
return(Total.Collateral.CashFlow)
}
}
#-- call REMIC Trance
REMIC.Tranche <- MBS(MBS.id = "BondLabSMBSIO")
#-- call REMIC Deal Date
REMIC.Deal <- REMICDeal(remic.deal = REMIC.Tranche@DealName)
#    call collateral group details
#    must be able to call multiple collateral groups or loan level detail
#    This is a function that calls multiple collateral groups
#    and aggregates them into a single cash flow table for
#    the REMIC ...
#-- call the required rates data
rates.data <- Rates(trade.date = "01-10-2013")
Termstructure <- TermStructure(rates.data = rates.data)
REMIC.Collateral.CashFlow <- function(REMIC.Deal = "character"){
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1:Group.Counter){
Collateral <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))
PrepaymentAssumption <- PrepaymentAssumption(bond.id = Collateral,
TermStructure = TermStructure,
MortgageRate = MortgageRate,
ModelTune = ModelTune,
Burnout = Collateral@Burnout,
PrepaymentAssumption = "CPR", CPR = 6)
Collateral.CashFlow <- MortgageCashFlow(bond.id = Collateral,
original.bal = REMIC.Deal@CollateralAmount,
settlement.date = "01-10-2013",
price = 105.75,
PrepaymentAssumption = PrepaymentAssumption)
Total.Collateral.CashFlow <- Total.Collateral.CashFlow + Collateral.CashFlow
return(Total.Collateral.CashFlow)
}
}
#-- call REMIC Trance
REMIC.Tranche <- MBS(MBS.id = "BondLabSMBSIO")
#-- call REMIC Deal Date
REMIC.Deal <- REMICDeal(remic.deal = REMIC.Tranche@DealName)
#    call collateral group details
#    must be able to call multiple collateral groups or loan level detail
#    This is a function that calls multiple collateral groups
#    and aggregates them into a single cash flow table for
#    the REMIC ...
#-- call the required rates data
rates.data <- Rates(trade.date = "01-10-2013")
Termstructure <- TermStructure(rates.data = rates.data)
#-- call REMIC Trance
REMIC.Tranche <- MBS(MBS.id = "BondLabSMBSIO")
#-- call REMIC Deal Date
REMIC.Deal <- REMICDeal(remic.deal = REMIC.Tranche@DealName)
#    call collateral group details
#    must be able to call multiple collateral groups or loan level detail
#    This is a function that calls multiple collateral groups
#    and aggregates them into a single cash flow table for
#    the REMIC ...
#-- call the required rates data
rates.data <- Rates(trade.date = "01-10-2013")
Termstructure <- TermStructure(rates.data = rates.data)
REMIC.Collateral.CashFlow <- function(REMIC.Deal = "character"){
Group.Counter <- REMIC.Deal@NumberofGroups
for(i in 1:Group.Counter){
Collateral <- MBS(MBS.id = as.character(REMIC.Deal@Group[[i]]@Cusip))
PrepaymentAssumption <- PrepaymentAssumption(bond.id = Collateral,
TermStructure = TermStructure,
MortgageRate = MortgageRate,
ModelTune = ModelTune,
Burnout = Collateral@Burnout,
PrepaymentAssumption = "CPR", CPR = 6)
Collateral.CashFlow <- MortgageCashFlow(bond.id = Collateral,
original.bal = REMIC.Deal@CollateralAmount,
settlement.date = "01-10-2013",
price = 105.75,
PrepaymentAssumption = PrepaymentAssumption)
Total.Collateral.CashFlow <- Total.Collateral.CashFlow + Collateral.CashFlow
return(Total.Collateral.CashFlow)
}
}
REMIC.Collateral.CashFlow(REMIC.Deal = REMIC.Deal)
